---
global:
    elasticsearch:
        enabled: true

    security:
        authentication:
            method: oidc

    identity:

        auth:
            enabled: true
            type: KEYCLOAK

            issuerBackendUrl: http://${CAMUNDA_RELEASE_NAME}-keycloak:8080/auth/realms/camunda-platform
            issuer: http://${CAMUNDA_RELEASE_NAME}-keycloak:8080/auth/realms/camunda-platform
            # using localhost:18080 -> camunda-keycloak:8080
            publicIssuerUrl: http://localhost:18080/auth/realms/camunda-platform  # replace this with a port of your choice when you will do port forwarding

            admin:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-admin-client-token

            identity:
                redirectUrl: http://localhost:8085  # replace this with a port of your choice when you will do port forwarding

            optimize:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-optimize-client-token
                redirectUrl: http://localhost:8083  # replace this with a port of your choice when you will do port forwarding

            webModeler:
                redirectUrl: http://localhost:8070

            console:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-console-client-token
                redirectUrl: http://localhost:8087

identityKeycloak:
    enabled: true
    postgresql:
        enabled: false
    externalDatabase:
        # see https://artifacthub.io/packages/helm/bitnami/keycloak
        existingSecret: identity-keycloak-secret   # Name of an existing secret resource containing the database credentials
        existingSecretHostKey: host
        existingSecretPortKey: port
        existingSecretUserKey: user
        existingSecretDatabaseKey: database
        existingSecretPasswordKey: password

    auth:
        existingSecret: identity-secret-for-components
        passwordSecretKey: identity-admin-client-token

    extraEnvVars:
        # This is required to ensure proper issuer of JWT tokens
        - name: KC_HOSTNAME
          value: ${CAMUNDA_RELEASE_NAME}-keycloak

    # match the internal keycloak port to the external port for JWT Tokens issuer
    ports:
        http: 8080
    service:
        ports:
            http: 8080

identity:
    enabled: true
    contextPath: /managementidentity
    fullURL: http://localhost:8080/managementidentity # replace this with a port of your choice when you will do port forwarding

    firstUser:
        enabled: true
        secret:
            existingSecret: identity-secret-for-components
            existingSecretKey: identity-first-user-password

    externalDatabase:
        enabled: true
        host: ${DB_HOST}
        port: ${DB_PORT}
        username: ${DB_IDENTITY_USERNAME}
        database: ${DB_IDENTITY_NAME}
        secret:
            existingSecret: identity-postgres-secret
            existingSecretPasswordKey: password

connectors:
    # Configure OIDC for connectors
    security:
        authentication:
            oidc:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-connectors-client-token

optimize:
    enabled: true

orchestration:
    # Configure OIDC for orchestration
    security:
        authentication:
            oidc:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-orchestration-client-token
                redirectUrl: http://localhost:8080

webModeler:
    enabled: false # by default, webModeler is not enabled

    restapi:
        externalDatabase:
            enabled: true
            url: jdbc:postgresql://${DB_HOST}:5432/${DB_WEBMODELER_NAME}?sslmode=require
            user: ${DB_WEBMODELER_USERNAME}
            secret:
                existingSecret: webmodeler-postgres-secret
                existingSecretPasswordKey: password

        mail:
            secret:
                existingSecret: identity-secret-for-components
                existingSecretKey: smtp-password
            fromAddress: changeme@example.com

webModelerPostgresql:
    enabled: false

console:
    enabled: false # by default, console is not enabled

elasticsearch:
    enabled: true
