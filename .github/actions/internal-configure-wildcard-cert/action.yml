---
name: Configure Wildcard Certificate Usage
description: |
    Determines whether to use wildcard certificates or Let's Encrypt based on PR context.
    For Renovate PRs, automatically detects if cert-manager is modified.

inputs:
    manual-wildcard-cert:
        description: Manual override to use wildcard certificate (takes precedence)
        required: false
        default: 'false'
    is-renovate-pr:
        description: Whether this is a Renovate bot PR
        required: true
    is-schedule:
        description: Whether this is a scheduled run
        required: true
    base-ref:
        description: Base branch reference for diff comparison
        required: false
        default: main

outputs:
    use-wildcard-cert:
        description: Whether to use wildcard certificate (true/false)
        value: ${{ steps.configure.outputs.USE_WILDCARD_CERT }}
    has-cert-manager-changes:
        description: Whether the PR contains cert-manager changes (only set for Renovate PRs)
        value: ${{ steps.check_cert_manager_changes.outputs.HAS_CERT_MANAGER_CHANGES }}

runs:
    using: composite
    steps:
        - name: Check if PR contains cert-manager changes (Renovate only)
          if: github.event_name == 'pull_request' && inputs.is-renovate-pr == 'true'
          id: check_cert_manager_changes
          shell: bash
          run: |
              set -euo pipefail

              echo "üîç Checking for cert-manager changes in Renovate PR..."

              # Check if PR contains changes to cert-manager
              CHANGED_FILES=$(git diff --name-only origin/${{ inputs.base-ref }}...HEAD || echo "")

              if echo "$CHANGED_FILES" | grep -qE "cert-manager"; then
                  echo "HAS_CERT_MANAGER_CHANGES=true" | tee -a "$GITHUB_OUTPUT"
                  echo "‚úÖ Detected cert-manager changes in PR, will use Let's Encrypt certificates"
              else
                  echo "HAS_CERT_MANAGER_CHANGES=false" | tee -a "$GITHUB_OUTPUT"
                  echo "‚ÑπÔ∏è  No cert-manager changes detected, will use wildcard certificate"
              fi

        - name: Configure wildcard certificate usage
          id: configure
          shell: bash
          run: |
              set -euo pipefail

              echo "üîß Determining certificate configuration strategy..."

              # Logic for wildcard cert usage:
              # 1. Manual input: use the specified value (highest priority)
              # 2. Renovate PR with cert-manager changes: use Let's Encrypt (false)
              # 3. Renovate PR without cert-manager changes: use wildcard (true)
              # 4. Regular PR: use Let's Encrypt (false)
              # 5. Schedule: use Let's Encrypt (false)

              if [[ "${{ inputs.manual-wildcard-cert }}" == "true" ]]; then
                  USE_WILDCARD="true"
                  echo "üìã Manual override: Using wildcard certificate"
              elif [[ "${{ github.event_name }}" == "pull_request" && "${{ inputs.is-renovate-pr }}" == "true" ]]; then
                  # For Renovate PRs, use wildcard unless there are cert-manager changes
                  if [[ "${{ steps.check_cert_manager_changes.outputs.HAS_CERT_MANAGER_CHANGES }}" == "true" ]]; then
                      USE_WILDCARD="false"
                      echo "üîê Renovate PR with cert-manager changes: Using Let's Encrypt"
                  else
                      USE_WILDCARD="true"
                      echo "üé´ Renovate PR without cert-manager changes: Using wildcard certificate"
                  fi
              elif [[ "${{ github.event_name }}" == "pull_request" && "${{ inputs.is-schedule }}" != "true" ]]; then
                  USE_WILDCARD="false"
                  echo "üîê Regular PR: Using Let's Encrypt"
              else
                  USE_WILDCARD="false"
                  echo "üîê Default behavior: Using Let's Encrypt"
              fi

              echo "USE_WILDCARD_CERT=$USE_WILDCARD" | tee -a "$GITHUB_OUTPUT"
              echo ""
              echo "üìä Summary:"
              echo "  - Manual override: ${{ inputs.manual-wildcard-cert }}"
              echo "  - Is Renovate PR: ${{ inputs.is-renovate-pr }}"
              echo "  - Is Schedule: ${{ inputs.is-schedule }}"
              echo "  - Has cert-manager Changes: ${{ steps.check_cert_manager_changes.outputs.HAS_CERT_MANAGER_CHANGES || 'N/A' }}"
              echo "  - Final Decision: USE_WILDCARD_CERT=$USE_WILDCARD"
