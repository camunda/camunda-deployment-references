---
name: Delete EKS resources

description: |
    This GitHub Action automates the deletion of EKS resources using a shell script.

inputs:
    s3-backend-bucket:
        description: Bucket containing the resources states
        required: true

    s3-bucket-region:
        description: Region of the bucket containing the resources states, if not set, will fallback on AWS_REGION
        required: false

    camunda-version:
        description: Camunda Ref Arch version to only clean up certain compatible ref arch versions.
        default: ''

    max-age-hours:
        description: Maximum age of resources in hours
        default: '20'

    target:
        description: Specify an ID to destroy specific resources or "all" to destroy all resources
        default: all

    temp-dir:
        description: Temporary directory prefix used for storing resource data during processing
        default: ./tmp/eks-cleanup/

    module-name:
        description: Name of the module to destroy (e.g., "eks-cluster", "aurora", "opensearch"), or "all" to destroy all modules
        default: all

    fail-on-not-found:
        description: Whether to fail if no matching resources are found (only for target not 'all')
        default: 'true'

runs:
    using: composite
    steps:
        - name: Delete resources
          id: delete_resources
          shell: bash
          run: |
              set -euo pipefail

              if [ -n "${{ inputs.s3-bucket-region }}" ]; then
                export AWS_S3_REGION="${{ inputs.s3-bucket-region }}"
              fi

              ${{ github.action_path }}/scripts/destroy.sh "${{ inputs.s3-backend-bucket }}" ${{ github.action_path }}/../../../aws/modules/ \
                "${{ inputs.temp-dir }}" ${{ inputs.max-age-hours }} ${{ inputs.target }} ${{ inputs.module-name }} ${{ inputs.camunda-version }} \
                $([[ "${{ inputs.fail-on-not-found }}" == "true" ]] && echo "--fail-on-not-found")
