---
name: Skip Workflow if Labeled
description: >
    Skips the workflow if a label matches its filename
    (e.g.  skip_aws_openshift_rosa_hcp_single_region_tests without the yml extension)

outputs:
    should_skip:
        description: Indicates whether the workflow should be skipped
        value: ${{ steps.check_labels.outputs.workflow_should_skip }}

runs:
    using: composite
    steps:
        - name: Debug workflow context
          shell: bash
          run: |
              set -euo pipefail

              echo "[debug] github.actor='${{ github.actor }}'"
              if [[ "${{ github.actor }}" == "renovate[bot]" ]]; then
                echo "[debug] Actor is Renovate bot"
              else
                echo "[debug] Actor is NOT Renovate bot"
              fi
              echo "[debug] github.event_name='${{ github.event_name }}'"
              echo "[debug] github.repository='${{ github.repository }}'"
              echo "[debug] github.workflow_ref='${{ github.workflow_ref }}'"
              echo "[debug] github.run_id='${{ github.run_id }}' run_attempt='${{ github.run_attempt }}'"

              if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                echo "[debug] pull_request.number='${{ github.event.pull_request.number }}'"
                echo "[debug] pull_request.head.ref='${{ github.event.pull_request.head.ref }}'"
                echo "[debug] pull_request.base.ref='${{ github.event.pull_request.base.ref }}'"
                echo "[debug] pull_request.title='${{ github.event.pull_request.title }}'"
                echo "[debug] Labels on PR:"
                echo '${{ toJSON(github.event.pull_request.labels.*.name) }}' | jq -r '.[]' || true
              elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                echo "[debug] workflow_dispatch inputs (raw JSON):"
                if [[ -f "$GITHUB_EVENT_PATH" ]]; then
                  jq '.inputs // {}' "$GITHUB_EVENT_PATH" || true
                  echo "[debug] Flattened key=value inputs:"
                  jq -r '.inputs // {} | to_entries[] | "[debug] input." + .key + "=" + (.value|tostring)' "$GITHUB_EVENT_PATH" || true
                else
                  echo "[debug] No event payload file found ($GITHUB_EVENT_PATH)"
                fi
              else
                echo "[debug] Not a pull_request event; skipping PR-specific debug data."
              fi

        - name: Get the current workflow filename and check for skip labels
          id: check_labels
          shell: bash
          run: |
              set -euo pipefail

              if [[ "${{ github.event_name }}" != "pull_request" ]]; then
                echo "workflow_should_skip=false" | tee -a "$GITHUB_OUTPUT"
                exit 0
              fi

              workflow_file_name=$(echo "${{ github.workflow_ref }}" | sed 's/@.*//')
              workflow_file_name=$(basename "$workflow_file_name" | sed 's/\(.*\)\(\.yaml\|\.yml\)$/\1/')
              echo "workflow_file_name=$workflow_file_name" | tee -a "$GITHUB_ENV"

              labels=$(echo '${{ toJSON(github.event.pull_request.labels.*.name) }}' | jq -r '.[]')
              workflow_labels="skip_$workflow_file_name"

              if echo "$labels" | grep -qE "$workflow_labels|testing-ci-not-necessary"; then
                echo "workflow_should_skip=true" | tee -a "$GITHUB_OUTPUT"
              else
                echo "workflow_should_skip=false" | tee -a "$GITHUB_OUTPUT"
              fi
