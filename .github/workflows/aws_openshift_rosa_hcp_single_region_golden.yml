---
name: Tests - Golden - AWS OpenShift ROSA HCP Single Region

on:
    workflow_dispatch:
    pull_request:
        paths:
            - .github/workflows/aws_openshift_rosa_hcp_single_region_golden.yml
            - .tool-versions
            - aws/modules/rosa-hcp/**
            - aws/openshift/rosa-hcp-single-region/**

# limit to a single execution per actor of this workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    IS_SCHEDULE: ${{ contains(github.head_ref, 'schedules/') || github.event_name == 'schedule' && 'true' || 'false' }}

    # keep this synced with other workflows
    AWS_PROFILE: infex
    AWS_REGION: eu-west-2
    S3_BACKEND_BUCKET: tests-ra-aws-rosa-hcp-tf-state-eu-central-1
    S3_BUCKET_REGION: eu-central-1
    S3_BUCKET_KEY: golden.tfstate

    MODULE_DIR: ./aws/openshift/rosa-hcp-single-region/

jobs:
    compare:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

            - name: Install asdf tools with cache
              uses: camunda/infraex-common-config/./.github/actions/asdf-install-tooling@c585602ff49e32c4c3b2dc4be1d7e7a0017961db # 1.3.9

            - name: Import Secrets
              id: secrets
              uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3
              with:
                  url: ${{ secrets.VAULT_ADDR }}
                  method: approle
                  roleId: ${{ secrets.VAULT_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_SECRET_ID }}
                  exportEnv: false
                  secrets: |
                      secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
                      secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;

            - name: Add profile credentials to ~/.aws/credentials
              shell: bash
              run: |
                  aws configure set aws_access_key_id ${{ steps.secrets.outputs.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set aws_secret_access_key ${{ steps.secrets.outputs.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}

            - name: Compute golden
              run: |
                  set -euxo pipefail
                  just regenerate-golden-file "${{ env.MODULE_DIR }}" "${{ env.S3_BUCKET_REGION }}" "${{ env.S3_BACKEND_BUCKET }}" "${{ env.S3_BUCKET_KEY }}" "./compare/"

            - name: Upload pipeline golden result
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
              with:
                  name: plan-artifact-json
                  path: ${{ env.MODULE_DIR }}compare/tfplan-golden.json
                  retention-days: 1

            - name: Compare Terraform plan with golden file
              run: |
                  delta "${{ env.MODULE_DIR }}test/golden/tfplan-golden.json" "${{ env.MODULE_DIR }}compare/tfplan-golden.json"
                  exit $?

            - name: Post diff on PR
              if: failure() && github.event_name == 'pull_request'
              uses: int128/diff-action@4919d5826a9bc511508659f6eeb6afff2f21053e # v1
              with:
                  base: ${{ env.MODULE_DIR }}test/golden/tfplan-golden.json
                  head: ${{ env.MODULE_DIR }}compare/tfplan-golden.json
                  comment-header: |
                      ## Module ${{ env.MODULE_DIR }} - Terraform Golden Plan Diff

                  comment-footer: |
                      ðŸ–² **Check the delta diff**
                      in the [workflow run](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}) for a detailed comparison.

                      If the changes are expected, you can use the uploaded artifact on the workflow to update the golden file on your branch.

                      ðŸ“Ÿ **Alternatively, run the following command locally** to update the golden file:
                      ```sh
                      just regenerate-golden-file "${{ env.MODULE_DIR }}" "${{ env.S3_BUCKET_REGION }}" "${{ env.S3_BACKEND_BUCKET }}" "${{ env.S3_BUCKET_KEY }}"
                      ```
