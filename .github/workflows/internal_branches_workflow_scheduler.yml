---
name: Internal - Global - Branches Schedule Workflows

on:
    pull_request:
        paths:
            - .github/workflows/internal_branches_workflow_scheduler.yml
    schedule:
        - cron: 0 * * * *   # every hour, every day

# limit to a single execution per ref of this workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

jobs:
    # TODO: add step to close all PR that are scheduled + delete the associated branch

    cleanup-open-prs:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  fetch-depth: 0

    define-matrix:
        runs-on: ubuntu-latest
        outputs:
            schedules: ${{ steps.matrix.outputs.schedules }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  fetch-depth: 0

            - name: Install asdf tools with cache
              uses: camunda/infraex-common-config/./.github/actions/asdf-install-tooling@6dc218bf7ee3812a4b6b13c305bce60d5d1d46e5 # 1.3.1

            - id: matrix
              run: |
                  set -euxo pipefail # tolerate, nothing.

                  # shellcheck disable=SC2086
                  schedules="$(yq '.schedules' --indent=0 --output-format json .github/workflows-config/workflow-scheduler.yml)"

                  # Convert each workflow_files array to a string format
                  formatted_schedules=$(echo "$schedules" | jq -c '.[].workflow_files |= tostring')

                  current_day=$(date +%A)
                  current_hour=$(date +%H)

                  # Filter schedules based on cron_every_day and cron_every_hours
                  filtered_schedules=$(echo "$formatted_schedules" | jq -c --arg current_day "$current_day" --arg current_hour "$current_hour" '
                      [.[] | select(
                        (.cron_every_day == null or (.cron_every_day | tostring | split(",") | index($current_day))) and
                        (.cron_every_hours == null or (.cron_every_hours | tostring | split(",") | index($current_hour)))
                      )]
                  ')

                  echo "schedules=${filtered_schedules}" | tee -a "$GITHUB_OUTPUT"

    schedule-workflows:
        runs-on: ubuntu-latest
        needs:
            - define-matrix
            - cleanup-open-prs
        strategy:
            fail-fast: false
            matrix:
                schedule: ${{ fromJson(needs.define-matrix.outputs.schedules) }}
        steps:
            - name: Generate token for GitHub
              id: generate-github-token
              uses: camunda/infra-global-github-actions/generate-github-app-token-from-vault-secrets@a6a9d41844431ce3a5edc43a0f446ed19fca9e25 # main
              with:
                  github-app-id-vault-key: GITHUB_APP_ID
                  github-app-id-vault-path: secret/data/products/infrastructure-experience/ci/common
                  github-app-private-key-vault-key: GITHUB_APP_PRIVATE_KEY
                  github-app-private-key-vault-path: secret/data/products/infrastructure-experience/ci/common
                  vault-auth-method: approle
                  vault-auth-role-id: ${{ secrets.VAULT_ROLE_ID }}
                  vault-auth-secret-id: ${{ secrets.VAULT_SECRET_ID }}
                  vault-url: ${{ secrets.VAULT_ADDR }}

            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  token: ${{ steps.generate-github-token.outputs.token }}
                  ref: ${{ matrix.schedule.branch }}

            - name: Prepare the working branch
              id: branch-update
              run: |
                  stringified_branch=$(echo "${{ matrix.schedule.name }}" | tr ' ' '_' | tr -cd '[:alnum:]_')
                  echo "current_branch=schedules/$stringified_branch" | tee -a "$GITHUB_OUTPUT"

            - name: Modify workflow files to trigger the PR
              run: |
                  workflow_files=$(echo '${{ matrix.schedule.workflow_files }}' | jq -r '.[]')
                  echo "Removing on.pull_request.paths from $workflow_files"

                  # Loop through each workflow file and modify it using yq
                  echo "$workflow_files" | while IFS= read -r workflow_file; do
                    yq -i 'del(.on.pull_request.path)' "$workflow_file"
                  done

            - name: Create the schedule PR
              uses: peter-evans/create-pull-request@v7
              with:
                  token: ${{ steps.generate-github-token.outputs.token }}
                  branch: ${{ steps.branch-update.outputs.current_branch }}
                  base: ${{ matrix.schedule.branch }}
                  branch-suffix: random
                  delete-branch: true
                  title: '[schedule][NO MERGE] ${{ matrix.schedule.name }}'
                  body: |
                      This PR is used to perform a schedule on a specific branch.
                      Don't do anything with this PR.
                      It will be auto-closed in 24 hours.
                  labels: |
                      schedule
                      automated pr
                      no merge
                  draft: true

    notify-on-failure:
        runs-on: ubuntu-latest
        if: github.event_name == 'schedule' && failure()
        needs:
            - define-matrix
            - schedule-workflows
            - cleanup-open-prs
        steps:
            - name: Notify in Slack in case of failure
              id: slack-notification
              uses: camunda/infraex-common-config/.github/actions/report-failure-on-slack@6158b7c7534f6dbeb3fa7c3c836f6e6aa6881b2e # 1.3.0
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
