---
name: Tests - Integration - AWS EKS/RDS/OS Modules

on:
    schedule:
        - cron: 0 1 * * 2
    workflow_dispatch:
    pull_request:
        # the paths should be synced with ../labeler.yml
        paths:
            - aws/modules/.test/**.go
            - aws/modules/.test/**/go.mod
            - aws/modules/fixtures/**
            - aws/modules/**.tf
            - .tool-versions
            - .github/workflows/aws_modules_eks_rds_os_tests.yml
            - justfile
            - .github/actions/aws-configure-cli/**
            - .github/actions/internal-apply-skip-label/**

# limit to a single execution per ref of this workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    # in case of renovate we don't cancel the previous run, so it can finish it
    # otherwise weekly renovate PRs with tf docs updates result in broken clusters
    cancel-in-progress: ${{ !contains('renovate[bot]', github.actor) }}

env:
    IS_SCHEDULE: ${{ contains(github.head_ref, 'schedules/') || github.event_name == 'schedule' && 'true' || 'false' }}
    IS_RENOVATE_PR: ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login == 'renovate[bot]' }}

    # please keep those variables synced with daily-cleanup.yml
    AWS_PROFILE: infex
    AWS_REGION: eu-west-2 # /!\ always use one of the available test region https://github.com/camunda/infraex-common-config
    TESTS_TF_BINARY_NAME: terraform

    # please keep test-gha*.yml synced
    S3_BACKEND_BUCKET: tests-eks-tf-state-eu-central-1
    S3_BUCKET_REGION: eu-central-1

jobs:
    triage:
        runs-on: ubuntu-latest
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
            - name: Check labels
              id: skip_check
              uses: ./.github/actions/internal-triage-skip

    # We can skip some tests using the commit description (skip-tests:NameOfTest1,NameOfTest2) or all tests (skip-tests:all) (see `DEVELOPER.md`)
    # If all tests are skipped, the result of this workflow will be `failed` on purpose
    # If you want to skip tests and have no error, you need to use `testing-ci-not-necessary` as a label on the PR
    configure-tests:
        needs:
            - triage
        runs-on: ubuntu-latest
        if: >-
            (github.event_name == 'schedule' || contains(github.head_ref, 'schedules/')) || github.event_name == 'workflow_dispatch' || (
              github.event_name == 'pull_request' &&
              !contains(github.event.pull_request.labels.*.name, 'testing-ci-not-necessary')
            )
        outputs:
            test_functions: ${{ steps.extract_test_functions.outputs.test_functions }}
            # ensure a suffix is added to prevent concurrency deletion with gha integration tests (test-gha-eks.yml)
            cluster_id: ${{ steps.short_git_sha.outputs.short_git_sha }}-g
        steps:
            - name: Checkout repository
              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Get Short GitHub SHA
              id: short_git_sha
              run: echo "short_git_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

            - name: Extract Test Functions
              id: extract_test_functions
              run: |
                  # We don't use set -euo pipefailas it's not working with this script

                  test_functions=$(grep -rho 'func \(Test[^ ]*\)' ./aws/modules/.test/src/ | sed 's/func \(Test[^ ]*\)(t/\1/' | tr '\n' ',' | sed 's/,$//')
                  echo "test_functions=$test_functions"

                  : # Extract test names marked to be skipped from the commit message description
                  commit_message=$(git log -1 --pretty=format:"%B")
                  echo "commit_message=$commit_message"

                  skipped_tests=$(echo "$commit_message" | grep 'skip-tests' | sed 's/skip-tests://')
                  echo "skipped_tests=$skipped_tests"

                  : # If all tests are marked to be skipped, then clear the test_functions list completely
                  if [ "$skipped_tests" == "all" ]; then
                    test_functions=""
                    echo "Skipping all tests (skip-tests:all found), this workflow will fail. \
                      If you want to skip-tests for a PR, please use the label 'testing-ci-not-necessary'"
                  else
                    : # Otherwise, remove the tests marked to be skipped from the test_functions list
                    if [ -n "$skipped_tests" ]; then
                      for test in $(echo "$skipped_tests" | tr ',' '\n'); do
                        echo "Skipping test: $test"
                        test_functions=$(echo "$test_functions" | sed "s/$test//g" | sed 's/,,/,/g' | sed 's/^,//' | sed 's/,$//')
                        echo "test_functions=$test_functions"
                      done
                    fi
                  fi

                  : # to json array
                  IFS=',' read -ra array <<< "$test_functions"
                  json_array="["
                  for element in "${array[@]}"
                  do
                    json_array+="\"$element\","
                  done
                  test_functions="${json_array%,}]"

                  echo "test_functions=${test_functions}" >> "$GITHUB_OUTPUT"
                  echo "test_functions=${test_functions}"

    integration-tests:
        runs-on: ubuntu-latest
        needs:
            - triage
            - configure-tests
        if: needs.triage.outputs.should_skip == 'false'
        strategy:
            fail-fast: false # don't propagate failing jobs
            matrix:
                test_function: ${{ fromJson(needs.configure-tests.outputs.test_functions) }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

            - name: Install asdf tools with cache
              uses: camunda/infraex-common-config/./.github/actions/asdf-install-tooling@791f01a12a6b0c44f16a1dce9c9791de34ec4767 # 1.3.8

            - name: Configure AWS CLI
              uses: ./.github/actions/aws-configure-cli
              with:
                  vault-addr: ${{ secrets.VAULT_ADDR }}
                  vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
                  vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
                  aws-profile: ${{ env.AWS_PROFILE }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Get go.mod details
              uses: Eun/go-mod-details@b719cd324463e2037cf3a0dd1dd6091bdc2730f4 # v1
              id: go-mod-details
              with:
                  modfile: ${{ github.workspace }}/aws/modules/.test/src/go.mod

            - name: Prepare ci tags
              id: prepare-ci-tags
              run: |
                  set -euo pipefail

                  ci_metadata=$(jq -c -n \
                    --arg run_id "${{ github.run_id }}" \
                    --arg run_number "${{ github.run_number }}" \
                    --arg workflow "${{ github.workflow }}" \
                    --arg actor "${{ github.actor }}" \
                    --arg ref "${{ github.ref }}" \
                    --arg sha "${{ github.sha }}" \
                    --arg repository "${{ github.repository }}" \
                    --arg event_name "${{ github.event_name }}" \
                    '{
                      "ci-run-id": $run_id,
                      "ci-run-number": $run_number,
                      "ci-workflow": $workflow,
                      "ci-actor": $actor,
                      "ci-ref": $ref,
                      "ci-commit": $sha,
                      "ci-repo": $repository,
                      "ci-event": $event_name,
                      "map-migrated": "migARUADZHVWZ"
                    }')

                  echo "CI_METADATA=$ci_metadata" | tee -a "$GITHUB_ENV"

            - name: Sanitize Tags
              id: sanitize-tags
              uses: ./.github/actions/internal-sanitize-tags
              with:
                  raw-tags: ${{ env.CI_METADATA }}

            - name: Launch test
              timeout-minutes: 125
              # Do not interrupt tests; otherwise, the Terraform state may become inconsistent.
              if: always() && success()
              run: |
                  set -euo pipefail

                  echo "Final tags: ${{ steps.sanitize-tags.outputs.sanitized_tags }}"
                  export TF_VAR_default_tags='${{ steps.sanitize-tags.outputs.sanitized_tags }}'

                  just aws-tf-modules-test ${{ matrix.test_function }} "--junitfile ${{ matrix.test_function }}_unit-tests.xml"
              env:
                  TF_STATE_BUCKET_REGION: ${{ env.S3_BUCKET_REGION }}
                  TESTS_CLUSTER_REGION: ${{ env.AWS_REGION }}
                  TESTS_TF_BINARY_NAME: ${{ env.TESTS_TF_BINARY_NAME }}
                  TESTS_CLUSTER_ID: ${{ needs.configure-tests.outputs.cluster_id }}

            # this is a workaround for test report not working as expected due to https://github.com/test-summary/action/issues/5
            - name: Filter logger.go from the test report (too large)
              if: always()
              run: |
                  set -euo pipefail

                  sed 's/&#xA;/\n/g' < "./aws/modules/.test/src/${{ matrix.test_function }}_unit-tests.xml" |
                  grep -E -v '^.*logger\.go.*$' |
                  sed 's/\n/&#xA;/g' > "./aws/modules/.test/src/${{ matrix.test_function }}_unit-tests_filtered.xml"

            - name: Upload test reports
              if: always()
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
              with:
                  name: test-reports-${{ matrix.test_function }}
                  path: ./aws/modules/.test/src/${{ matrix.test_function }}_unit-tests_filtered.xml
                  retention-days: 1

            - name: Remove profile credentials from ~/.aws/credentials
              if: always()
              run: |
                  set -euo pipefail

                  rm -rf ~/.aws/credentials

    test-report:
        runs-on: ubuntu-latest
        if: ${{ always() && needs.configure-tests.result == 'success' }}
        needs:
            - configure-tests
            - integration-tests
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
              with:
                  pattern: test-reports-*
                  path: /tmp/testreports
                  merge-multiple: true

            - name: Run test-summary
              uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2
              with:
                  paths: /tmp/testreports/**/*.xml

    cleanup-resources:
        runs-on: ubuntu-latest
        if: always()
        needs:
            - configure-tests
            - integration-tests
        steps:
            - name: Checkout repository
              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Install asdf tools with cache
              uses: camunda/infraex-common-config/./.github/actions/asdf-install-tooling@791f01a12a6b0c44f16a1dce9c9791de34ec4767 # 1.3.8

            - name: Configure AWS CLI
              uses: ./.github/actions/aws-configure-cli
              with:
                  vault-addr: ${{ secrets.VAULT_ADDR }}
                  vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
                  vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
                  aws-profile: ${{ env.AWS_PROFILE }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Delete resources of this run
              timeout-minutes: 125
              if: always()
              uses: ./.github/actions/aws-eks-cleanup-resources
              with:
                  s3-backend-bucket: ${{ env.S3_BACKEND_BUCKET }}
                  s3-bucket-region: ${{ env.S3_BUCKET_REGION }}
                  max-age-hours: '0'
                  target: ${{ needs.configure-tests.outputs.cluster_id }}
                  fail-on-not-found: 'false' # tests are supposed to cleanup this

    report-success:
        name: Report success
        runs-on: ubuntu-latest
        needs:
            - configure-tests
            - integration-tests
            - test-report
            - cleanup-resources
        steps:
            - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

            - name: Prevent other runs for renovate
              if: ${{ env.IS_RENOVATE_PR == 'true' }}
              env:
                  GH_TOKEN: ${{ github.token }}
              uses: ./.github/actions/internal-apply-skip-label

    report-failure:
        name: Report failure
        runs-on: ubuntu-latest
        if: failure()
        needs:
            - report-success
        steps:
            - name: Notify in Slack in case of failure
              id: slack-notification
              if: env.IS_SCHEDULE == 'true'
              uses: camunda/infraex-common-config/.github/actions/report-failure-on-slack@791f01a12a6b0c44f16a1dce9c9791de34ec4767 # 1.3.8
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
