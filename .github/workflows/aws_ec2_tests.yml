---
name: AWS EC2 Tests

on:
    schedule:
        - cron: 0 4 * * 1-5
    workflow_dispatch:
    pull_request:
        paths:
            - .github/workflows/aws_ec2_tests.yml
            - .tool-versions
            - aws/ec2/**

# limit to a single execution per actor of this workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    AWS_PROFILE: infex
    AWS_REGION: eu-west-2

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            ################## Checkout ##################
            - name: Checkout repository
              uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
            ############# Tool Installations #############
            - name: Install tooling using asdf
              uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3
            ################## Secrets ###################
            - name: Import Secrets
              id: secrets
              uses: hashicorp/vault-action@v3
              with:
                  url: ${{ secrets.VAULT_ADDR }}
                  method: approle
                  roleId: ${{ secrets.VAULT_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_SECRET_ID }}
                  exportEnv: false
                  secrets: |
                      secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
                      secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;
            ################ AWS Config ##################
            # Official action does not support profiles
            - name: Add profile credentials to ~/.aws/credentials
              shell: bash
              run: |
                  aws configure set aws_access_key_id ${{ steps.secrets.outputs.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set aws_secret_access_key ${{ steps.secrets.outputs.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}
            ################ Prerequisites ##################
            - name: Export test prefix
              run: |
                  prefix="ec2-test-$(tr -dc 'a-zA-Z0-9' </dev/urandom | head -c 5)-$(date +%Y-%m-%d)"
                  echo "TF_PREFIX=${prefix}" >> "$GITHUB_ENV"
            - name: Configure Terraform Backend
              run: |
                  .github/workflows/scripts/tf_configure_remote_backend.sh ${{ github.workspace }}/aws/ec2/terraform/config.tf
            ################ Run Tests ##################
            - name: Terratest - Run all Tests
              id: terratest
              working-directory: ./test/src
              timeout-minutes: 121
              run: |
                  go install github.com/jstemmer/go-junit-report@latest
                  go test -v -timeout 120m | go-junit-report -set-exit-code > report.xml
           ################ Cleanup ##################
            - name: Terratest - Failsafe Terraform Destroy
              if: failure()
              working-directory: ./test/src
              timeout-minutes: 30
              run: |
                  go test -v -timeout 30m -run TestTerraformDestroy
            - name: Cleanup S3 state bucket
              if: always() && steps.terratest.outcome == 'success'
              run: |
                  aws s3 rm "s3://tf-state-multi-reg/state/$TF_PREFIX/terraform.tfstate"
            - name: Remove profile credentials from ~/.aws/credentials
              if: always()
              run: |
                  rm -rf ~/.aws/credentials
            - name: Post Test Summary
              if: always()
              uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2
              with:
                  paths: |
                      ${{ github.workspace }}/aws/ec2/test/src/report.xml

    notify-on-failure:
        runs-on: ubuntu-latest
        if: github.event_name == 'schedule' && failure()
        needs:
            - test
        steps:
            - name: Notify in Slack in case of failure
              id: slack-notification
              uses: camunda/infraex-common-config/.github/actions/report-failure-on-slack@1b6af8e7117e4e9bdf777911b7a724879b59fcfe # 1.2.4
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
