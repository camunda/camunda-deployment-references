---
# This workflow updates an artifact containing the OpenShift ACM versions,
# it's used by renovate and published at https://camunda.github.io/camunda-deployment-references/openshift_acm_versions.txt
name: Internal - OpenShift - Save OpenShift ACM Versions as an artifact

on:
    schedule:
        - cron: 0 0 * * *
    workflow_dispatch:
    pull_request:
        paths:
            - .github/workflows/internal_openshift_artifact_acm_versions.yml

jobs:
    save-acm-versions:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

            - name: Retrieve OpenShift ACM versions
              shell: bash
              run: |
                  set -euo pipefail

                  python3 -m venv acm-venv
                  source acm-venv/bin/activate

                  pip install requests bs4

                  python "$GITHUB_WORKSPACE/.github/scripts/get_acm_versions.py"

                  echo "Printing: $GITHUB_WORKSPACE/docs/openshift_acm_versions.txt"
                  cat "$GITHUB_WORKSPACE/docs/openshift_acm_versions.txt"

            - name: Stash changes and checkout gh-pages branch
              shell: bash
              run: |
                  set -euo pipefail

                  git stash push docs/openshift_acm_versions.txt || true

                  git checkout gh-pages

            - name: Commit and push OpenShift ACM versions file to gh-pages
              shell: bash
              run: |
                  set -euo pipefail

                  git diff --exit-code docs/openshift_acm_versions.txt || {
                    git config --local user.name "github-actions[bot]"
                    git config --local user.email "github-actions[bot]@users.noreply.github.com"
                    git add docs/openshift_acm_versions.txt
                    git commit -m "Update OpenShift ACM versions"
                    git push origin gh-pages
                  }
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Notify in Slack in case of failure
              id: slack-notification
              if: failure() && github.event_name == 'schedule'
              uses: camunda/infraex-common-config/.github/actions/report-failure-on-slack@14912e07221cd650bf9286e2a4733a138ca46374 # 1.3.6
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
