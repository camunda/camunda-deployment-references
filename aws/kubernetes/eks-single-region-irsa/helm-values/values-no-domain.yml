---
identityKeycloak:
    enabled: false # not supported in a non-domain setup
    serviceAccount:
        name: ${CAMUNDA_KEYCLOAK_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_KEYCLOAK_ARN}

    postgresql:
        enabled: false
    externalDatabase:
        host: ${DB_HOST}
        user: ${DB_KEYCLOAK_USERNAME}
        port: 5432
        database: ${DB_KEYCLOAK_NAME}

    extraEnvVars:
        - name: KEYCLOAK_EXTRA_ARGS
          value: --db-driver=software.amazon.jdbc.Driver --transaction-xa-enabled=false --log-level=INFO,software.amazon.jdbc:INFO
        - name: KEYCLOAK_JDBC_PARAMS
          value: wrapperPlugins=iam&ssl=true&sslmode=require
        - name: KEYCLOAK_JDBC_DRIVER
          value: aws-wrapper:postgresql
    auth:
        existingSecret: identity-secret-for-components
        passwordSecretKey: identity-admin-client-token

# TODO: re-evaluate and potentially clean up
# 2025-09-03 - previous behaviour is not possible in a non-domain setup
# For now just promoting the Orchestration Cluster with basic auth, re-evaluate based on outcome of
# https://camunda.slack.com/archives/C08MRKHJ0CD/p1755246616281649
# The issuerBackendUrl is not supported atm by embedded Identity
# this means that publicIssuerUrl is used and must be accessible by both machines and users
# only workaround for users is to do atm host file modifications

global:
    elasticsearch:
        enabled: false
    opensearch:
        enabled: true
        aws:
            enabled: true # enable IRSA auth
        url:
            protocol: https
            host: ${OPENSEARCH_HOST}
            # Amazon OpenSearch Service listens on port 443 opposed to the usual port 9200.
            port: 443

    identity:

        auth:
            enabled: false # not supported in a non-domain setup
            publicIssuerUrl: http://localhost:18080/auth/realms/camunda-platform  # replace this with a port of your choice when you will do port forwarding
            issuerBackendUrl: http://camunda-keycloak/auth/realms/camunda-platform

            orchestration:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-orchestration-client-token
                redirectUrl: http://localhost:8082  # replace this with a port of your choice when you will do port forwarding
            connectors:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-connectors-client-token
            optimize:
                redirectUrl: http://localhost:8083/optimize  # replace this with a port of your choice when you will do port forwarding
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-optimize-client-token
            webModeler:
                redirectUrl: http://localhost:8084/modeler
            console:
                redirectUrl: http://localhost:8085/console
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: identity-console-client-token

connectors:
    image:
        tag: 8.8-SNAPSHOT

orchestration:
    image:
        tag: 8.8-SNAPSHOT
    serviceAccount:
        name: ${CAMUNDA_ZEEBE_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${OPENSEARCH_ROLE_ARN}
# not supported in a non-domain setup
#     security:
#         authentication:
#             method: oidc

webModeler:
    enabled: false # by default, webModeler is not enabled

    serviceAccount:
        name: ${CAMUNDA_WEBMODELER_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_WEBMODELER_ARN}

    restapi:
        externalDatabase:
            url: jdbc:aws-wrapper:postgresql://${DB_HOST}:5432/${DB_WEBMODELER_NAME}?wrapperPlugins=iam
            user: ${DB_WEBMODELER_USERNAME}
            secret:
                existingSecret: identity-secret-for-components # this fake password reference is needed to let the chart deploy webmodeler
                existingSecretPasswordKey: password
        env:
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: software.amazon.jdbc.Driver
        mail:
            secret:
                existingSecret: identity-secret-for-components # reference the smtp password
                existingSecretKey: smtp-password
            fromAddress: changeme@example.com   # change this required value

webModelerPostgresql:
    # Will deploy a postgresql datbase for webModeler.
    # If you enable webModeler, you either need to turn it true or use an external database
    enabled: false
    auth:
        existingSecret: identity-secret-for-components
        secretKeys:
            adminPasswordKey: identity-webmodeler-postgres-admin-password
            userPasswordKey: identity-webmodeler-postgres-user-password

identity:
    enabled: false # not supported in a non-domain setup
    serviceAccount:
        name: ${CAMUNDA_IDENTITY_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_IDENTITY_ARN}

    contextPath: /managementidentity
    fullURL: http://localhost:8080/managementidentity # replace this with a port of your choice when you will do port forwarding

    # TODO: if oidc is supported in the end, this will need adjustment in the docs
    firstUser:
        enabled: false
        secret:
            existingSecret: identity-secret-for-components
            existingSecretKey: identity-first-user-password # demo

    externalDatabase:
        enabled: true
        host: ${DB_HOST}
        port: 5432
        username: ${DB_IDENTITY_USERNAME}
        database: ${DB_IDENTITY_NAME}

    env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:aws-wrapper:postgresql://${DB_HOST}:5432/${DB_IDENTITY_NAME}?wrapperPlugins=iam
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: software.amazon.jdbc.Driver
        - name: SPRING_DATASOURCE_USERNAME
          value: ${DB_IDENTITY_USERNAME}

optimize:
    enabled: false # not supported in a non-domain setup
    serviceAccount:
        name: ${CAMUNDA_OPTIMIZE_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${OPENSEARCH_ROLE_ARN}

    # OpenSearch prevents migration
    migration:
        enabled: false

console:
    enabled: false # by default, console is not enabled
    contextPath: /console

elasticsearch:
    enabled: false
