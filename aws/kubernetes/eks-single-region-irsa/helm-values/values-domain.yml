---
identityKeycloak:
    enabled: true
    serviceAccount:
        name: ${CAMUNDA_KEYCLOAK_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_KEYCLOAK_ARN}

    postgresql:
        enabled: false
    externalDatabase:
        host: ${DB_HOST}
        user: ${DB_KEYCLOAK_USERNAME}
        port: 5432
        database: ${DB_KEYCLOAK_NAME}

    extraEnvVars:
        - name: KEYCLOAK_EXTRA_ARGS
          value: --db-driver=software.amazon.jdbc.Driver --transaction-xa-enabled=false --log-level=INFO,software.amazon.jdbc:INFO
        - name: KEYCLOAK_JDBC_PARAMS
          value: wrapperPlugins=iam&ssl=true&sslmode=require
        - name: KEYCLOAK_JDBC_DRIVER
          value: aws-wrapper:postgresql

    auth:
        existingSecret: identity-secret-for-components
        passwordSecretKey: admin-password

global:
    elasticsearch:
        enabled: false
    opensearch:
        enabled: true
        aws:
            enabled: true # enable IRSA auth
        url:
            protocol: https
            host: ${OPENSEARCH_HOST}
            # Amazon OpenSearch Service listens on port 443 opposed to the usual port 9200.
            port: 443

    ingress:
        enabled: true
        host: ${DOMAIN_NAME}
        tls:
            enabled: true
            secretName: camunda-c8-tls
        annotations:
            kubernetes.io/tls-acme: 'true'
    identity:
        auth:
            enabled: true
            publicIssuerUrl: https://${DOMAIN_NAME}/auth/realms/camunda-platform
            orchestration:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: orchestration-secret
                redirectUrl: https://${DOMAIN_NAME}
            connectors:
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: connectors-secret
            optimize:
                redirectUrl: https://${DOMAIN_NAME}/optimize
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: optimize-secret
            webModeler:
                redirectUrl: https://${DOMAIN_NAME}/modeler
            console:
                redirectUrl: https://${DOMAIN_NAME}/console
                secret:
                    existingSecret: identity-secret-for-components
                    existingSecretKey: console-secret

webModeler:
    enabled: false # by default, webModeler is not enabled
    contextPath: /modeler

    serviceAccount:
        name: ${CAMUNDA_WEBMODELER_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_WEBMODELER_ARN}

    restapi:
        externalDatabase:
            url: jdbc:aws-wrapper:postgresql://${DB_HOST}:5432/${DB_WEBMODELER_NAME}?wrapperPlugins=iam
            user: ${DB_WEBMODELER_USERNAME}
            secret:
                existingSecret: identity-secret-for-components # this fake password reference is needed to let the chart deploy webmodeler
                existingSecretPasswordKey: password
        env:
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: software.amazon.jdbc.Driver
        mail:
            secret:
                existingSecret: identity-secret-for-components # reference the smtp password
                existingSecretKey: smtp-password
            fromAddress: changeme@example.com   # change this required value

webModelerPostgresql:
    # Will deploy a postgresql datbase for webModeler.
    # If you enable webModeler, you either need to turn it true or use an external database
    enabled: false
    auth:
        existingSecret: identity-secret-for-components
        secretKeys:
            adminPasswordKey: identity-webmodeler-postgres-admin-password
            userPasswordKey: identity-webmodeler-postgres-user-password

identity:
    enabled: true
    contextPath: /managementidentity
    fullURL: https://${DOMAIN_NAME}/managementidentity

    firstUser:
        enabled: true
        secret:
            existingSecret: identity-secret-for-components
            existingSecretKey: first-user-password # demo

    serviceAccount:
        name: ${CAMUNDA_IDENTITY_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${DB_ROLE_IDENTITY_ARN}

    externalDatabase:
        enabled: true
        host: ${DB_HOST}
        port: 5432
        username: ${DB_IDENTITY_USERNAME}
        database: ${DB_IDENTITY_NAME}

    env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:aws-wrapper:postgresql://${DB_HOST}:5432/${DB_IDENTITY_NAME}?wrapperPlugins=iam
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: software.amazon.jdbc.Driver
        - name: SPRING_DATASOURCE_USERNAME
          value: ${DB_IDENTITY_USERNAME}

connectors:
    contextPath: /connectors

optimize:
    enabled: true
    contextPath: /optimize

    serviceAccount:
        name: ${CAMUNDA_OPTIMIZE_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${OPENSEARCH_ROLE_ARN}

    # OpenSearch prevents migration
    migration:
        enabled: false

orchestration:
    serviceAccount:
        name: ${CAMUNDA_ZEEBE_SERVICE_ACCOUNT_NAME}
        annotations:
            eks.amazonaws.com/role-arn: ${OPENSEARCH_ROLE_ARN}
    security:
        authentication:
            method: oidc
    ingress:
        grpc:
            enabled: true
            host: zeebe.${DOMAIN_NAME}
            tls:
                enabled: true
                secretName: zeebe-c8-tls-grpc
            annotations:
                kubernetes.io/tls-acme: 'true'

console:
    enabled: false # by default, console is not enabled
    contextPath: /console

elasticsearch:
    enabled: false
