---
identityKeycloak:
    enabled: true
    postgresql:
        enabled: false
    externalDatabase:
        # see https://artifacthub.io/packages/helm/bitnami/keycloak
        existingSecret: identity-keycloak-secret   # Name of an existing secret resource containing the database credentials
        existingSecretHostKey: host
        existingSecretPortKey: port
        existingSecretUserKey: user
        existingSecretDatabaseKey: database
        existingSecretPasswordKey: password
    auth:
        existingSecret: identity-secret-for-components

global:
    elasticsearch:
        enabled: false
    opensearch:
        enabled: true
        aws:
            enabled: false # we rely on anonymous auth, not irsa, basic auth is not supported on managed OpenSearch
        auth:
            username:
            password:
        url:
            protocol: https
            host: ${OPENSEARCH_HOST}
            # Amazon OpenSearch Service listens on port 443 opposed to the usual port 9200.
            port: 443

    identity:

        auth:
            enabled: true
            publicIssuerUrl: http://localhost:18080/auth/realms/camunda-platform  # replace this with a port of your choice when you will do port forwarding

            orchestration:
                existingSecret: identity-secret-for-components
                redirectUrl: http://localhost:8082  # replace this with a port of your choice when you will do port forwarding
            connectors:
                existingSecret: identity-secret-for-components
            optimize:
                redirectUrl: http://localhost:8083  # replace this with a port of your choice when you will do port forwarding
                existingSecret: identity-secret-for-components
            webModeler:
                redirectUrl: http://localhost:8084
            console:
                redirectUrl: http://localhost:8085
                existingSecret: identity-secret-for-components

identity:
    enabled: true
    fullURL: http://localhost:8080 # replace this with a port of your choice when you will do port forwarding

    externalDatabase:
        enabled: true
        host: ${DB_HOST}
        port: 5432
        username: ${DB_IDENTITY_USERNAME}
        database: ${DB_IDENTITY_NAME}
        existingSecret: identity-postgres-secret
        existingSecretPasswordKey: password

webModeler:
    enabled: false # by default, webModeler is not enabled

    restapi:
        externalDatabase:
            url: jdbc:aws-wrapper:postgresql://${DB_HOST}:5432/${DB_WEBMODELER_NAME}
            user: ${DB_WEBMODELER_USERNAME}
            existingSecret: webmodeler-postgres-secret
            existingSecretPasswordKey: password
        env:
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: software.amazon.jdbc.Driver
        mail:
            existingSecret: identity-secret-for-components # reference the smtp password
            fromAddress: changeme@example.com   # change this required value

# TODO: document this change => from webModelerPostgresql to postgresql
postgresql:
    # Will deploy a postgresql datbase for webModeler.
    # If you enable webModeler, you either need to turn it true or use an external database
    enabled: false
    auth:
        existingSecret: identity-secret-for-components
        secretKeys:
            adminPasswordKey: identity-webmodeler-postgres-admin-password
            userPasswordKey: identity-webmodeler-postgres-user-password

optimize:
    enabled: true
    # OpenSearch prevents migration
    migration:
        enabled: false

console:
    enabled: false # by default, console is not enabled
    contextPath: /

elasticsearch:
    enabled: false
