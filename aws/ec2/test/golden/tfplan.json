{
  "format_version": "1.2",
  "terraform_version": "1.9.7",
  "variables": {
    "aws_ami": {
      "value": "ami"
    },
    "aws_instance_type": {
      "value": "m6i.xlarge"
    },
    "aws_instance_type_bastion": {
      "value": "t2.nano"
    },
    "camunda_disk_size": {
      "value": 50
    },
    "cidr_blocks": {
      "value": "10.200.0.0/16"
    },
    "enable_alb": {
      "value": true
    },
    "enable_jump_host": {
      "value": true
    },
    "enable_nlb": {
      "value": true
    },
    "enable_opensearch": {
      "value": true
    },
    "enable_opensearch_logging": {
      "value": false
    },
    "enable_vpc_logging": {
      "value": false
    },
    "generate_ssh_key_pair": {
      "value": false
    },
    "instance_count": {
      "value": 3
    },
    "opensearch_disk_size": {
      "value": 50
    },
    "opensearch_disk_throughput": {
      "value": 125
    },
    "opensearch_instance_count": {
      "value": 1
    },
    "opensearch_log_types": {
      "value": [
        "SEARCH_SLOW_LOGS",
        "INDEX_SLOW_LOGS",
        "ES_APPLICATION_LOGS"
      ]
    },
    "opensearch_master_password": {
      "value": "camundarocks123"
    },
    "opensearch_master_username": {
      "value": "camunda"
    },
    "prefix": {
      "value": "camunda"
    },
    "pub_key_path": {
      "value": "~/.ssh/id_rsa.pub"
    }
  },
  "planned_values": {
    "outputs": {
      "alb_endpoint": {
        "sensitive": false
      },
      "aws_ami": {
        "sensitive": false,
        "type": "string",
        "value": "ami-09e173854da66fbc9"
      },
      "aws_opensearch_domain": {
        "sensitive": false
      },
      "bastion_ip": {
        "sensitive": false
      },
      "camunda_ips": {
        "sensitive": false
      },
      "nlb_endpoint": {
        "sensitive": false
      },
      "private_key": {
        "sensitive": true,
        "type": "string",
        "value": ""
      },
      "public_key": {
        "sensitive": true,
        "type": "string",
        "value": ""
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_ebs_volume.camunda[0]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "camunda",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "eu-central-1a",
            "encrypted": true,
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 50,
            "tags": {
              "Name": "camunda-extra-volume-0"
            },
            "tags_all": {
              "Name": "camunda-extra-volume-0",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "type": "gp3"
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_ebs_volume.camunda[1]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "camunda",
          "index": 1,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "eu-central-1b",
            "encrypted": true,
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 50,
            "tags": {
              "Name": "camunda-extra-volume-1"
            },
            "tags_all": {
              "Name": "camunda-extra-volume-1",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "type": "gp3"
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_ebs_volume.camunda[2]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "camunda",
          "index": 2,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "eu-central-1c",
            "encrypted": true,
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 50,
            "tags": {
              "Name": "camunda-extra-volume-2"
            },
            "tags_all": {
              "Name": "camunda-extra-volume-2",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "type": "gp3"
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_instance_profile.cloudwatch_instance_profile",
          "mode": "managed",
          "type": "aws_iam_instance_profile",
          "name": "cloudwatch_instance_profile",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "name": "camunda-cloudwatch-instance-profile",
            "path": "/",
            "role": "camunda-cloudwatch",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            }
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_policy.cloudwatch_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "cloudwatch_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": "Policy for CloudWatch to allow monitoring of the EC2 instances",
            "name": "camunda-cloudwatch-policy",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"cloudwatch:PutMetricData\",\"ec2:DescribeVolumes\",\"ec2:DescribeTags\",\"logs:PutLogEvents\",\"logs:PutRetentionPolicy\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\",\"xray:PutTraceSegments\",\"xray:PutTelemetryRecords\",\"xray:GetSamplingRules\",\"xray:GetSamplingTargets\",\"xray:GetSamplingStatisticSummaries\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"CWACloudWatchServerPermissions\"},{\"Action\":[\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*\",\"Sid\":\"CWASSMServerPermissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            }
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_role.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "cloudwatch",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "description": null,
            "force_detach_policies": false,
            "max_session_duration": 3600,
            "name": "camunda-cloudwatch",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            }
          },
          "sensitive_values": {
            "inline_policy": [],
            "managed_policy_arns": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.cloudwatch_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "cloudwatch_policy_attachment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "role": "camunda-cloudwatch"
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_instance.bastion[0]",
          "mode": "managed",
          "type": "aws_instance",
          "name": "bastion",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami",
            "associate_public_ip_address": true,
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "instance_type": "t2.nano",
            "key_name": "camunda-auth-key",
            "launch_template": [],
            "source_dest_check": true,
            "tags": {
              "Name": "camunda-bastion"
            },
            "tags_all": {
              "Name": "camunda-bastion",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "user_data_replace_on_change": false,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "instance_market_options": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "maintenance_options": [],
            "metadata_options": [],
            "network_interface": [],
            "private_dns_name_options": [],
            "root_block_device": [],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags": {},
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_instance.camunda[0]",
          "mode": "managed",
          "type": "aws_instance",
          "name": "camunda",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami",
            "associate_public_ip_address": false,
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "iam_instance_profile": "camunda-cloudwatch-instance-profile",
            "instance_type": "m6i.xlarge",
            "key_name": "camunda-auth-key",
            "launch_template": [],
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": true,
                "tags": null,
                "volume_size": 10,
                "volume_type": "gp3"
              }
            ],
            "source_dest_check": true,
            "tags": {
              "Name": "camunda-instance-0"
            },
            "tags_all": {
              "Name": "camunda-instance-0",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
            "user_data_replace_on_change": false,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "instance_market_options": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "maintenance_options": [],
            "metadata_options": [],
            "network_interface": [],
            "private_dns_name_options": [],
            "root_block_device": [
              {
                "tags_all": {}
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags": {},
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_instance.camunda[1]",
          "mode": "managed",
          "type": "aws_instance",
          "name": "camunda",
          "index": 1,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami",
            "associate_public_ip_address": false,
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "iam_instance_profile": "camunda-cloudwatch-instance-profile",
            "instance_type": "m6i.xlarge",
            "key_name": "camunda-auth-key",
            "launch_template": [],
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": true,
                "tags": null,
                "volume_size": 10,
                "volume_type": "gp3"
              }
            ],
            "source_dest_check": true,
            "tags": {
              "Name": "camunda-instance-1"
            },
            "tags_all": {
              "Name": "camunda-instance-1",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
            "user_data_replace_on_change": false,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "instance_market_options": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "maintenance_options": [],
            "metadata_options": [],
            "network_interface": [],
            "private_dns_name_options": [],
            "root_block_device": [
              {
                "tags_all": {}
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags": {},
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_instance.camunda[2]",
          "mode": "managed",
          "type": "aws_instance",
          "name": "camunda",
          "index": 2,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami",
            "associate_public_ip_address": false,
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "iam_instance_profile": "camunda-cloudwatch-instance-profile",
            "instance_type": "m6i.xlarge",
            "key_name": "camunda-auth-key",
            "launch_template": [],
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": true,
                "tags": null,
                "volume_size": 10,
                "volume_type": "gp3"
              }
            ],
            "source_dest_check": true,
            "tags": {
              "Name": "camunda-instance-2"
            },
            "tags_all": {
              "Name": "camunda-instance-2",
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
            "user_data_replace_on_change": false,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "instance_market_options": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "maintenance_options": [],
            "metadata_options": [],
            "network_interface": [],
            "private_dns_name_options": [],
            "root_block_device": [
              {
                "tags_all": {}
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags": {},
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_key_pair.main",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "main",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "key_name": "camunda-auth-key",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQ4mHqeTheSLsUBBhhXa73ysoPKYnGGNjjMn+D66ksJLVkSO053c/PD2UCfhMrkNT4Y5mluZMTfuPFhNjN6b5wPscOOYlIwvATfLiARW1uvXgrUMJwCFV8lMiU+Xq7VtXADDipNjzVhwt4vbaw7M62ro63q/37HjAuw0RFKNqnKCAWYgeEvh6v/cxu6DEwJQFAZ8qNqa97pI4vwIJ4XDKGpFxhek20xtdpKL2MW50+1XYo8R1hJcKpg2+1yDDGe+wSeJ4E1v+3TleLvWJsi4iC5obuCrx2bjhWlNnuI6UXZ+cI/eBsVloo8kKYLeVt6V428KKYyJXHajN66fcvXGXJ langleu@langleu-Lenovo-G580",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            }
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_kms_key.main",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "main",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": null,
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 7,
            "description": "camunda - KMS key for encrypting EBS volumes and OpenSearch",
            "enable_key_rotation": true,
            "is_enabled": true,
            "key_usage": "ENCRYPT_DECRYPT",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "xks_key_id": null
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb.grpc[0]",
          "mode": "managed",
          "type": "aws_lb",
          "name": "grpc",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "access_logs": [],
            "client_keep_alive": null,
            "connection_logs": [],
            "customer_owned_ipv4_pool": null,
            "desync_mitigation_mode": null,
            "dns_record_client_routing_policy": "any_availability_zone",
            "drop_invalid_header_fields": null,
            "enable_cross_zone_load_balancing": false,
            "enable_deletion_protection": false,
            "enable_http2": null,
            "enable_tls_version_and_cipher_suite_headers": null,
            "enable_waf_fail_open": null,
            "enable_xff_client_port": null,
            "idle_timeout": null,
            "internal": false,
            "load_balancer_type": "network",
            "name": "camunda-nlb-grpc",
            "preserve_host_header": null,
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "xff_header_processing_mode": null
          },
          "sensitive_values": {
            "access_logs": [],
            "connection_logs": [],
            "security_groups": [],
            "subnet_mapping": [],
            "subnets": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb.main[0]",
          "mode": "managed",
          "type": "aws_lb",
          "name": "main",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "access_logs": [],
            "client_keep_alive": 3600,
            "connection_logs": [],
            "customer_owned_ipv4_pool": null,
            "desync_mitigation_mode": "defensive",
            "dns_record_client_routing_policy": null,
            "drop_invalid_header_fields": false,
            "enable_cross_zone_load_balancing": null,
            "enable_deletion_protection": false,
            "enable_http2": true,
            "enable_tls_version_and_cipher_suite_headers": false,
            "enable_waf_fail_open": false,
            "enable_xff_client_port": false,
            "idle_timeout": 60,
            "internal": false,
            "load_balancer_type": "application",
            "name": "camunda-alb-webui",
            "preserve_host_header": false,
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null,
            "xff_header_processing_mode": "append"
          },
          "sensitive_values": {
            "access_logs": [],
            "connection_logs": [],
            "security_groups": [],
            "subnet_mapping": [],
            "subnets": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb_listener.grpc_26500[0]",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "grpc_26500",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "alpn_policy": null,
            "certificate_arn": null,
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": [],
                "type": "forward"
              }
            ],
            "port": 80,
            "protocol": "TCP",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": []
              }
            ],
            "mutual_authentication": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb_listener.http_8080[0]",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "http_8080",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "alpn_policy": null,
            "certificate_arn": null,
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": [],
                "type": "forward"
              }
            ],
            "port": 80,
            "protocol": "HTTP",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": []
              }
            ],
            "mutual_authentication": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb_listener.http_9090[0]",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "http_9090",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "alpn_policy": null,
            "certificate_arn": null,
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": [],
                "type": "forward"
              }
            ],
            "port": 9090,
            "protocol": "HTTP",
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "redirect": []
              }
            ],
            "mutual_authentication": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_lb_target_group.connectors",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "connectors",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "deregistration_delay": "300",
            "health_check": [
              {
                "enabled": true,
                "healthy_threshold": 2,
                "interval": 30,
                "path": "/actuator/health/",
                "port": "9090",
                "protocol": "HTTP",
                "timeout": 5,
                "unhealthy_threshold": 2
              }
            ],
            "lambda_multi_value_headers_enabled": false,
            "name": "camunda-tg-9090",
            "port": 9090,
            "protocol": "HTTP",
            "proxy_protocol_v2": false,
            "slow_start": 0,
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "target_type": "instance"
          },
          "sensitive_values": {
            "health_check": [
              {}
            ],
            "load_balancer_arns": [],
            "stickiness": [],
            "tags_all": {},
            "target_failover": [],
            "target_group_health": [],
            "target_health_state": []
          }
        },
        {
          "address": "aws_lb_target_group.grpc",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "grpc",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "deregistration_delay": "300",
            "health_check": [
              {
                "enabled": true,
                "healthy_threshold": 2,
                "interval": 30,
                "port": "26500",
                "protocol": "TCP",
                "timeout": 5,
                "unhealthy_threshold": 2
              }
            ],
            "lambda_multi_value_headers_enabled": false,
            "name": "camunda-tg-grpc",
            "port": 26500,
            "protocol": "TCP",
            "proxy_protocol_v2": false,
            "slow_start": 0,
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "target_type": "instance"
          },
          "sensitive_values": {
            "health_check": [
              {}
            ],
            "load_balancer_arns": [],
            "stickiness": [],
            "tags_all": {},
            "target_failover": [],
            "target_group_health": [],
            "target_health_state": []
          }
        },
        {
          "address": "aws_lb_target_group.main",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "main",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "deregistration_delay": "300",
            "health_check": [
              {
                "enabled": true,
                "healthy_threshold": 2,
                "interval": 30,
                "path": "/",
                "port": "8080",
                "protocol": "HTTP",
                "timeout": 5,
                "unhealthy_threshold": 2
              }
            ],
            "lambda_multi_value_headers_enabled": false,
            "name": "camunda-tg-8080",
            "port": 8080,
            "protocol": "HTTP",
            "proxy_protocol_v2": false,
            "slow_start": 0,
            "stickiness": [
              {
                "cookie_duration": 43200,
                "cookie_name": null,
                "enabled": true,
                "type": "lb_cookie"
              }
            ],
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "target_type": "instance"
          },
          "sensitive_values": {
            "health_check": [
              {}
            ],
            "load_balancer_arns": [],
            "stickiness": [
              {}
            ],
            "tags_all": {},
            "target_failover": [],
            "target_group_health": [],
            "target_health_state": []
          }
        },
        {
          "address": "aws_lb_target_group_attachment.connectors[\"0\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "connectors",
          "index": "0",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 9090
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.connectors[\"1\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "connectors",
          "index": "1",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 9090
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.connectors[\"2\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "connectors",
          "index": "2",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 9090
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.grpc[\"0\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "grpc",
          "index": "0",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 26500
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.grpc[\"1\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "grpc",
          "index": "1",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 26500
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.grpc[\"2\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "grpc",
          "index": "2",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 26500
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.main[\"0\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "main",
          "index": "0",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 8080
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.main[\"1\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "main",
          "index": "1",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 8080
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lb_target_group_attachment.main[\"2\"]",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "main",
          "index": "2",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": null,
            "port": 8080
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_opensearch_domain.opensearch_cluster[0]",
          "mode": "managed",
          "type": "aws_opensearch_domain",
          "name": "opensearch_cluster",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "access_policies": "{\"Statement\":[{\"Action\":\"es:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:es:eu-central-1:444804106854:domain/camunda-os-cluster/*\"}],\"Version\":\"2012-10-17\"}",
            "advanced_options": {
              "rest.action.multi.allow_explicit_index": "true"
            },
            "advanced_security_options": [
              {
                "anonymous_auth_enabled": false,
                "enabled": false,
                "internal_user_database_enabled": true,
                "master_user_options": [
                  {
                    "master_user_arn": null,
                    "master_user_name": "camunda",
                    "master_user_password": "camundarocks123"
                  }
                ]
              }
            ],
            "cluster_config": [
              {
                "dedicated_master_count": null,
                "dedicated_master_enabled": false,
                "dedicated_master_type": null,
                "instance_count": 1,
                "instance_type": "t3.small.search",
                "multi_az_with_standby_enabled": null,
                "warm_count": null,
                "warm_enabled": false,
                "warm_type": null,
                "zone_awareness_config": [],
                "zone_awareness_enabled": null
              }
            ],
            "cognito_options": [],
            "domain_name": "camunda-os-cluster",
            "ebs_options": [
              {
                "ebs_enabled": true,
                "throughput": 125,
                "volume_size": 50,
                "volume_type": "gp3"
              }
            ],
            "encrypt_at_rest": [
              {
                "enabled": true
              }
            ],
            "engine_version": "OpenSearch_2.15",
            "log_publishing_options": [
              {
                "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
                "enabled": false,
                "log_type": "ES_APPLICATION_LOGS"
              },
              {
                "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
                "enabled": false,
                "log_type": "INDEX_SLOW_LOGS"
              },
              {
                "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
                "enabled": false,
                "log_type": "SEARCH_SLOW_LOGS"
              }
            ],
            "node_to_node_encryption": [
              {
                "enabled": true
              }
            ],
            "snapshot_options": [
              {
                "automated_snapshot_start_hour": 0
              }
            ],
            "tags": null,
            "tags_all": {
              "managed_by": "Terraform"
            },
            "timeouts": {
              "create": "2h",
              "delete": null,
              "update": null
            },
            "vpc_options": [
              {}
            ]
          },
          "sensitive_values": {
            "advanced_options": {},
            "advanced_security_options": [
              {
                "master_user_options": [
                  {
                    "master_user_name": true,
                    "master_user_password": true
                  }
                ]
              }
            ],
            "auto_tune_options": [],
            "cluster_config": [
              {
                "cold_storage_options": [],
                "zone_awareness_config": []
              }
            ],
            "cognito_options": [],
            "domain_endpoint_options": [],
            "ebs_options": [
              {}
            ],
            "encrypt_at_rest": [
              {}
            ],
            "log_publishing_options": [
              {},
              {},
              {}
            ],
            "node_to_node_encryption": [
              {}
            ],
            "off_peak_window_options": [],
            "snapshot_options": [
              {}
            ],
            "software_update_options": [],
            "tags_all": {},
            "timeouts": {},
            "vpc_options": [
              {
                "availability_zones": [],
                "security_group_ids": [],
                "subnet_ids": []
              }
            ]
          }
        },
        {
          "address": "aws_security_group.allow_necessary_camunda_ports_within_vpc",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_necessary_camunda_ports_within_vpc",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow necessary Camunda ports within the VPC",
            "egress": [
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26500,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26500
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26501,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26501
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26502,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26502
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 9090,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9090
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 9600,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9600
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26500,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26500
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26501,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26501
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 26502,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26502
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 9090,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9090
              },
              {
                "cidr_blocks": [
                  "10.200.0.0/16"
                ],
                "description": "",
                "from_port": 9600,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9600
              }
            ],
            "name": "allow_necessary_camunda_ports_within_vpc",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "allow_necessary_camunda_ports_within_vpc"
            },
            "tags_all": {
              "Name": "allow_necessary_camunda_ports_within_vpc",
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.allow_remote_80_443",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_80_443",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow remote HTTP and HTTPS traffic for e.g. package updates",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "allow_remote_80_443",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "allow_remote_80_443"
            },
            "tags_all": {
              "Name": "allow_remote_80_443",
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.allow_remote_9090",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_9090",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow remote traffic on 9090 for the LB",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 9090,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9090
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 9090,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9090
              }
            ],
            "name": "allow_remote_9090",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "allow_remote_9090"
            },
            "tags_all": {
              "Name": "allow_remote_9090",
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.allow_remote_grpc",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_grpc",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow remote gRPC traffic",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 26500,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 26500
              }
            ],
            "name": "allow_remote_grpc",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "allow_remote_grpc"
            },
            "tags_all": {
              "Name": "allow_remote_grpc",
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.allow_ssh",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_ssh",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow SSH traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "allow_ssh",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "allow_ssh"
            },
            "tags_all": {
              "Name": "allow_ssh",
              "managed_by": "Terraform"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_volume_attachment.ebs_attachment[0]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_attachment",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdb",
            "force_detach": null,
            "skip_destroy": null,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_volume_attachment.ebs_attachment[1]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_attachment",
          "index": 1,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdb",
            "force_detach": null,
            "skip_destroy": null,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_volume_attachment.ebs_attachment[2]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_attachment",
          "index": 2,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdb",
            "force_detach": null,
            "skip_destroy": null,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.vpc.aws_default_network_acl.this[0]",
              "mode": "managed",
              "type": "aws_default_network_acl",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "egress": [
                  {
                    "action": "allow",
                    "cidr_block": "",
                    "from_port": 0,
                    "icmp_code": null,
                    "icmp_type": null,
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": 101,
                    "to_port": 0
                  },
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": 0,
                    "icmp_code": null,
                    "icmp_type": null,
                    "ipv6_cidr_block": "",
                    "protocol": "-1",
                    "rule_no": 100,
                    "to_port": 0
                  }
                ],
                "ingress": [
                  {
                    "action": "allow",
                    "cidr_block": "",
                    "from_port": 0,
                    "icmp_code": null,
                    "icmp_type": null,
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": 101,
                    "to_port": 0
                  },
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": 0,
                    "icmp_code": null,
                    "icmp_type": null,
                    "ipv6_cidr_block": "",
                    "protocol": "-1",
                    "rule_no": 100,
                    "to_port": 0
                  }
                ],
                "subnet_ids": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default",
                  "managed_by": "Terraform"
                }
              },
              "sensitive_values": {
                "egress": [
                  {},
                  {}
                ],
                "ingress": [
                  {},
                  {}
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_default_route_table.default[0]",
              "mode": "managed",
              "type": "aws_default_route_table",
              "name": "default",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "propagating_vgws": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default",
                  "managed_by": "Terraform"
                },
                "timeouts": {
                  "create": "5m",
                  "update": "5m"
                }
              },
              "sensitive_values": {
                "route": [],
                "tags": {},
                "tags_all": {},
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_default_security_group.this[0]",
              "mode": "managed",
              "type": "aws_default_security_group",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "revoke_rules_on_delete": false,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-default",
                  "managed_by": "Terraform"
                }
              },
              "sensitive_values": {
                "egress": [],
                "ingress": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_eip.nat[0]",
              "mode": "managed",
              "type": "aws_eip",
              "name": "nat",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "address": null,
                "associate_with_private_ip": null,
                "customer_owned_ipv4_pool": null,
                "domain": "vpc",
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-eu-central-1a"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-eu-central-1a",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_internet_gateway.this[0]",
              "mode": "managed",
              "type": "aws_internet_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_nat_gateway.this[0]",
              "mode": "managed",
              "type": "aws_nat_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "connectivity_type": "public",
                "secondary_allocation_ids": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-eu-central-1a"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-eu-central-1a",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "secondary_private_ip_addresses": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route.private_nat_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "private_nat_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": null,
                "core_network_arn": null,
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": null,
                "destination_prefix_list_id": null,
                "egress_only_gateway_id": null,
                "gateway_id": null,
                "local_gateway_id": null,
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": null,
                "vpc_endpoint_id": null,
                "vpc_peering_connection_id": null
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route.public_internet_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "public_internet_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": null,
                "core_network_arn": null,
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": null,
                "destination_prefix_list_id": null,
                "egress_only_gateway_id": null,
                "local_gateway_id": null,
                "nat_gateway_id": null,
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": null,
                "vpc_endpoint_id": null,
                "vpc_peering_connection_id": null
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.private[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.public[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table_association.private[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_subnet.private[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1a",
                "cidr_block": "10.200.0.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1a"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1a",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1b",
                "cidr_block": "10.200.16.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1b"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1b",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1c",
                "cidr_block": "10.200.32.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1c"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-private-eu-central-1c",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1a",
                "cidr_block": "10.200.64.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1a"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1a",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1b",
                "cidr_block": "10.200.80.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1b"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1b",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "eu-central-1c",
                "cidr_block": "10.200.96.0/20",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_lni_at_device_index": null,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1c"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc-public-eu-central-1c",
                  "managed_by": "Terraform"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_vpc.this[0]",
              "mode": "managed",
              "type": "aws_vpc",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_generated_ipv6_cidr_block": null,
                "cidr_block": "10.200.0.0/16",
                "enable_dns_hostnames": true,
                "enable_dns_support": true,
                "instance_tenancy": "default",
                "ipv4_ipam_pool_id": null,
                "ipv4_netmask_length": null,
                "ipv6_ipam_pool_id": null,
                "ipv6_netmask_length": null,
                "tags": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc"
                },
                "tags_all": {
                  "Example": "camunda-vpc",
                  "Name": "camunda-vpc",
                  "managed_by": "Terraform"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            }
          ],
          "address": "module.vpc"
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_ebs_volume.camunda[0]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "camunda",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "eu-central-1a",
          "encrypted": true,
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 50,
          "tags": {
            "Name": "camunda-extra-volume-0"
          },
          "tags_all": {
            "Name": "camunda-extra-volume-0",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "type": "gp3"
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_ebs_volume.camunda[1]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "camunda",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "eu-central-1b",
          "encrypted": true,
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 50,
          "tags": {
            "Name": "camunda-extra-volume-1"
          },
          "tags_all": {
            "Name": "camunda-extra-volume-1",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "type": "gp3"
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_ebs_volume.camunda[2]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "camunda",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "eu-central-1c",
          "encrypted": true,
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 50,
          "tags": {
            "Name": "camunda-extra-volume-2"
          },
          "tags_all": {
            "Name": "camunda-extra-volume-2",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "type": "gp3"
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_instance_profile.cloudwatch_instance_profile",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "cloudwatch_instance_profile",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "camunda-cloudwatch-instance-profile",
          "path": "/",
          "role": "camunda-cloudwatch",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name_prefix": true,
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_policy.cloudwatch_policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cloudwatch_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Policy for CloudWatch to allow monitoring of the EC2 instances",
          "name": "camunda-cloudwatch-policy",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"cloudwatch:PutMetricData\",\"ec2:DescribeVolumes\",\"ec2:DescribeTags\",\"logs:PutLogEvents\",\"logs:PutRetentionPolicy\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\",\"xray:PutTraceSegments\",\"xray:PutTelemetryRecords\",\"xray:GetSamplingRules\",\"xray:GetSamplingTargets\",\"xray:GetSamplingStatisticSummaries\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"CWACloudWatchServerPermissions\"},{\"Action\":[\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*\",\"Sid\":\"CWASSMServerPermissions\"}],\"Version\":\"2012-10-17\"}",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "attachment_count": true,
          "id": true,
          "name_prefix": true,
          "policy_id": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role.cloudwatch",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cloudwatch",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "camunda-cloudwatch",
          "path": "/",
          "permissions_boundary": null,
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.cloudwatch_policy_attachment",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cloudwatch_policy_attachment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "role": "camunda-cloudwatch"
        },
        "after_unknown": {
          "id": true,
          "policy_arn": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_instance.bastion[0]",
      "mode": "managed",
      "type": "aws_instance",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami",
          "associate_public_ip_address": true,
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "instance_type": "t2.nano",
          "key_name": "camunda-auth-key",
          "launch_template": [],
          "source_dest_check": true,
          "tags": {
            "Name": "camunda-bastion"
          },
          "tags_all": {
            "Name": "camunda-bastion",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "user_data_replace_on_change": false,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_options": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_stop": true,
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "host_resource_group_arn": true,
          "iam_instance_profile": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_lifecycle": true,
          "instance_market_options": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "launch_template": [],
          "maintenance_options": true,
          "metadata_options": true,
          "monitoring": true,
          "network_interface": true,
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_dns_name_options": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": true,
          "secondary_private_ips": true,
          "security_groups": true,
          "spot_instance_request_id": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {},
          "tenancy": true,
          "user_data": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "instance_market_options": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "maintenance_options": [],
          "metadata_options": [],
          "network_interface": [],
          "private_dns_name_options": [],
          "root_block_device": [],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_instance.camunda[0]",
      "mode": "managed",
      "type": "aws_instance",
      "name": "camunda",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami",
          "associate_public_ip_address": false,
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "iam_instance_profile": "camunda-cloudwatch-instance-profile",
          "instance_type": "m6i.xlarge",
          "key_name": "camunda-auth-key",
          "launch_template": [],
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": true,
              "tags": null,
              "volume_size": 10,
              "volume_type": "gp3"
            }
          ],
          "source_dest_check": true,
          "tags": {
            "Name": "camunda-instance-0"
          },
          "tags_all": {
            "Name": "camunda-instance-0",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
          "user_data_replace_on_change": false,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_options": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_stop": true,
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "host_resource_group_arn": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_lifecycle": true,
          "instance_market_options": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "launch_template": [],
          "maintenance_options": true,
          "metadata_options": true,
          "monitoring": true,
          "network_interface": true,
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_dns_name_options": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": [
            {
              "device_name": true,
              "iops": true,
              "kms_key_id": true,
              "tags_all": true,
              "throughput": true,
              "volume_id": true
            }
          ],
          "secondary_private_ips": true,
          "security_groups": true,
          "spot_instance_request_id": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {},
          "tenancy": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "instance_market_options": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "maintenance_options": [],
          "metadata_options": [],
          "network_interface": [],
          "private_dns_name_options": [],
          "root_block_device": [
            {
              "tags_all": {}
            }
          ],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_instance.camunda[1]",
      "mode": "managed",
      "type": "aws_instance",
      "name": "camunda",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami",
          "associate_public_ip_address": false,
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "iam_instance_profile": "camunda-cloudwatch-instance-profile",
          "instance_type": "m6i.xlarge",
          "key_name": "camunda-auth-key",
          "launch_template": [],
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": true,
              "tags": null,
              "volume_size": 10,
              "volume_type": "gp3"
            }
          ],
          "source_dest_check": true,
          "tags": {
            "Name": "camunda-instance-1"
          },
          "tags_all": {
            "Name": "camunda-instance-1",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
          "user_data_replace_on_change": false,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_options": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_stop": true,
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "host_resource_group_arn": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_lifecycle": true,
          "instance_market_options": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "launch_template": [],
          "maintenance_options": true,
          "metadata_options": true,
          "monitoring": true,
          "network_interface": true,
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_dns_name_options": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": [
            {
              "device_name": true,
              "iops": true,
              "kms_key_id": true,
              "tags_all": true,
              "throughput": true,
              "volume_id": true
            }
          ],
          "secondary_private_ips": true,
          "security_groups": true,
          "spot_instance_request_id": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {},
          "tenancy": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "instance_market_options": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "maintenance_options": [],
          "metadata_options": [],
          "network_interface": [],
          "private_dns_name_options": [],
          "root_block_device": [
            {
              "tags_all": {}
            }
          ],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_instance.camunda[2]",
      "mode": "managed",
      "type": "aws_instance",
      "name": "camunda",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami",
          "associate_public_ip_address": false,
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "iam_instance_profile": "camunda-cloudwatch-instance-profile",
          "instance_type": "m6i.xlarge",
          "key_name": "camunda-auth-key",
          "launch_template": [],
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": true,
              "tags": null,
              "volume_size": 10,
              "volume_type": "gp3"
            }
          ],
          "source_dest_check": true,
          "tags": {
            "Name": "camunda-instance-2"
          },
          "tags_all": {
            "Name": "camunda-instance-2",
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "user_data": "792b0b7fec59ecb3611c494cead934f472d61785",
          "user_data_replace_on_change": false,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_options": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_stop": true,
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "host_resource_group_arn": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_lifecycle": true,
          "instance_market_options": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "launch_template": [],
          "maintenance_options": true,
          "metadata_options": true,
          "monitoring": true,
          "network_interface": true,
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_dns_name_options": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": [
            {
              "device_name": true,
              "iops": true,
              "kms_key_id": true,
              "tags_all": true,
              "throughput": true,
              "volume_id": true
            }
          ],
          "secondary_private_ips": true,
          "security_groups": true,
          "spot_instance_request_id": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {},
          "tenancy": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "instance_market_options": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "maintenance_options": [],
          "metadata_options": [],
          "network_interface": [],
          "private_dns_name_options": [],
          "root_block_device": [
            {
              "tags_all": {}
            }
          ],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_key_pair.main",
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "main",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "key_name": "camunda-auth-key",
          "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQ4mHqeTheSLsUBBhhXa73ysoPKYnGGNjjMn+D66ksJLVkSO053c/PD2UCfhMrkNT4Y5mluZMTfuPFhNjN6b5wPscOOYlIwvATfLiARW1uvXgrUMJwCFV8lMiU+Xq7VtXADDipNjzVhwt4vbaw7M62ro63q/37HjAuw0RFKNqnKCAWYgeEvh6v/cxu6DEwJQFAZ8qNqa97pI4vwIJ4XDKGpFxhek20xtdpKL2MW50+1XYo8R1hJcKpg2+1yDDGe+wSeJ4E1v+3TleLvWJsi4iC5obuCrx2bjhWlNnuI6UXZ+cI/eBsVloo8kKYLeVt6V428KKYyJXHajN66fcvXGXJ langleu@langleu-Lenovo-G580",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "fingerprint": true,
          "id": true,
          "key_name_prefix": true,
          "key_pair_id": true,
          "key_type": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_kms_key.main",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "main",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "bypass_policy_lockout_safety_check": false,
          "custom_key_store_id": null,
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": 7,
          "description": "camunda - KMS key for encrypting EBS volumes and OpenSearch",
          "enable_key_rotation": true,
          "is_enabled": true,
          "key_usage": "ENCRYPT_DECRYPT",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "xks_key_id": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "key_id": true,
          "multi_region": true,
          "policy": true,
          "rotation_period_in_days": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb.grpc[0]",
      "mode": "managed",
      "type": "aws_lb",
      "name": "grpc",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access_logs": [],
          "client_keep_alive": null,
          "connection_logs": [],
          "customer_owned_ipv4_pool": null,
          "desync_mitigation_mode": null,
          "dns_record_client_routing_policy": "any_availability_zone",
          "drop_invalid_header_fields": null,
          "enable_cross_zone_load_balancing": false,
          "enable_deletion_protection": false,
          "enable_http2": null,
          "enable_tls_version_and_cipher_suite_headers": null,
          "enable_waf_fail_open": null,
          "enable_xff_client_port": null,
          "idle_timeout": null,
          "internal": false,
          "load_balancer_type": "network",
          "name": "camunda-nlb-grpc",
          "preserve_host_header": null,
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "xff_header_processing_mode": null
        },
        "after_unknown": {
          "access_logs": [],
          "arn": true,
          "arn_suffix": true,
          "connection_logs": [],
          "dns_name": true,
          "enforce_security_group_inbound_rules_on_private_link_traffic": true,
          "id": true,
          "ip_address_type": true,
          "name_prefix": true,
          "security_groups": true,
          "subnet_mapping": true,
          "subnets": true,
          "tags_all": {},
          "vpc_id": true,
          "zone_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "access_logs": [],
          "connection_logs": [],
          "security_groups": [],
          "subnet_mapping": [],
          "subnets": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb.main[0]",
      "mode": "managed",
      "type": "aws_lb",
      "name": "main",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access_logs": [],
          "client_keep_alive": 3600,
          "connection_logs": [],
          "customer_owned_ipv4_pool": null,
          "desync_mitigation_mode": "defensive",
          "dns_record_client_routing_policy": null,
          "drop_invalid_header_fields": false,
          "enable_cross_zone_load_balancing": null,
          "enable_deletion_protection": false,
          "enable_http2": true,
          "enable_tls_version_and_cipher_suite_headers": false,
          "enable_waf_fail_open": false,
          "enable_xff_client_port": false,
          "idle_timeout": 60,
          "internal": false,
          "load_balancer_type": "application",
          "name": "camunda-alb-webui",
          "preserve_host_header": false,
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null,
          "xff_header_processing_mode": "append"
        },
        "after_unknown": {
          "access_logs": [],
          "arn": true,
          "arn_suffix": true,
          "connection_logs": [],
          "dns_name": true,
          "enforce_security_group_inbound_rules_on_private_link_traffic": true,
          "id": true,
          "ip_address_type": true,
          "name_prefix": true,
          "security_groups": true,
          "subnet_mapping": true,
          "subnets": true,
          "tags_all": {},
          "vpc_id": true,
          "zone_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "access_logs": [],
          "connection_logs": [],
          "security_groups": [],
          "subnet_mapping": [],
          "subnets": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb_listener.grpc_26500[0]",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "grpc_26500",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "alpn_policy": null,
          "certificate_arn": null,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": [],
              "type": "forward"
            }
          ],
          "port": 80,
          "protocol": "TCP",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": true,
              "redirect": [],
              "target_group_arn": true
            }
          ],
          "id": true,
          "load_balancer_arn": true,
          "mutual_authentication": true,
          "ssl_policy": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": []
            }
          ],
          "mutual_authentication": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb_listener.http_8080[0]",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "http_8080",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "alpn_policy": null,
          "certificate_arn": null,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": [],
              "type": "forward"
            }
          ],
          "port": 80,
          "protocol": "HTTP",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": true,
              "redirect": [],
              "target_group_arn": true
            }
          ],
          "id": true,
          "load_balancer_arn": true,
          "mutual_authentication": true,
          "ssl_policy": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": []
            }
          ],
          "mutual_authentication": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb_listener.http_9090[0]",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "http_9090",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "alpn_policy": null,
          "certificate_arn": null,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": [],
              "type": "forward"
            }
          ],
          "port": 9090,
          "protocol": "HTTP",
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": true,
              "redirect": [],
              "target_group_arn": true
            }
          ],
          "id": true,
          "load_balancer_arn": true,
          "mutual_authentication": true,
          "ssl_policy": true,
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "redirect": []
            }
          ],
          "mutual_authentication": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_lb_target_group.connectors",
      "mode": "managed",
      "type": "aws_lb_target_group",
      "name": "connectors",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "deregistration_delay": "300",
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 2,
              "interval": 30,
              "path": "/actuator/health/",
              "port": "9090",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 2
            }
          ],
          "lambda_multi_value_headers_enabled": false,
          "name": "camunda-tg-9090",
          "port": 9090,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "target_type": "instance"
        },
        "after_unknown": {
          "arn": true,
          "arn_suffix": true,
          "connection_termination": true,
          "health_check": [
            {
              "matcher": true
            }
          ],
          "id": true,
          "ip_address_type": true,
          "load_balancer_arns": true,
          "load_balancing_algorithm_type": true,
          "load_balancing_anomaly_mitigation": true,
          "load_balancing_cross_zone_enabled": true,
          "name_prefix": true,
          "preserve_client_ip": true,
          "protocol_version": true,
          "stickiness": true,
          "tags_all": {},
          "target_failover": true,
          "target_group_health": true,
          "target_health_state": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "health_check": [
            {}
          ],
          "load_balancer_arns": [],
          "stickiness": [],
          "tags_all": {},
          "target_failover": [],
          "target_group_health": [],
          "target_health_state": []
        }
      }
    },
    {
      "address": "aws_lb_target_group.grpc",
      "mode": "managed",
      "type": "aws_lb_target_group",
      "name": "grpc",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "deregistration_delay": "300",
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 2,
              "interval": 30,
              "port": "26500",
              "protocol": "TCP",
              "timeout": 5,
              "unhealthy_threshold": 2
            }
          ],
          "lambda_multi_value_headers_enabled": false,
          "name": "camunda-tg-grpc",
          "port": 26500,
          "protocol": "TCP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "target_type": "instance"
        },
        "after_unknown": {
          "arn": true,
          "arn_suffix": true,
          "connection_termination": true,
          "health_check": [
            {
              "matcher": true,
              "path": true
            }
          ],
          "id": true,
          "ip_address_type": true,
          "load_balancer_arns": true,
          "load_balancing_algorithm_type": true,
          "load_balancing_anomaly_mitigation": true,
          "load_balancing_cross_zone_enabled": true,
          "name_prefix": true,
          "preserve_client_ip": true,
          "protocol_version": true,
          "stickiness": true,
          "tags_all": {},
          "target_failover": true,
          "target_group_health": true,
          "target_health_state": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "health_check": [
            {}
          ],
          "load_balancer_arns": [],
          "stickiness": [],
          "tags_all": {},
          "target_failover": [],
          "target_group_health": [],
          "target_health_state": []
        }
      }
    },
    {
      "address": "aws_lb_target_group.main",
      "mode": "managed",
      "type": "aws_lb_target_group",
      "name": "main",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "deregistration_delay": "300",
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 2,
              "interval": 30,
              "path": "/",
              "port": "8080",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 2
            }
          ],
          "lambda_multi_value_headers_enabled": false,
          "name": "camunda-tg-8080",
          "port": 8080,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "stickiness": [
            {
              "cookie_duration": 43200,
              "cookie_name": null,
              "enabled": true,
              "type": "lb_cookie"
            }
          ],
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "target_type": "instance"
        },
        "after_unknown": {
          "arn": true,
          "arn_suffix": true,
          "connection_termination": true,
          "health_check": [
            {
              "matcher": true
            }
          ],
          "id": true,
          "ip_address_type": true,
          "load_balancer_arns": true,
          "load_balancing_algorithm_type": true,
          "load_balancing_anomaly_mitigation": true,
          "load_balancing_cross_zone_enabled": true,
          "name_prefix": true,
          "preserve_client_ip": true,
          "protocol_version": true,
          "stickiness": [
            {}
          ],
          "tags_all": {},
          "target_failover": true,
          "target_group_health": true,
          "target_health_state": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "health_check": [
            {}
          ],
          "load_balancer_arns": [],
          "stickiness": [
            {}
          ],
          "tags_all": {},
          "target_failover": [],
          "target_group_health": [],
          "target_health_state": []
        }
      }
    },
    {
      "address": "aws_lb_target_group_attachment.connectors[\"0\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "connectors",
      "index": "0",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 9090
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.connectors[\"1\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "connectors",
      "index": "1",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 9090
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.connectors[\"2\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "connectors",
      "index": "2",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 9090
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.grpc[\"0\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "grpc",
      "index": "0",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 26500
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.grpc[\"1\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "grpc",
      "index": "1",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 26500
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.grpc[\"2\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "grpc",
      "index": "2",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 26500
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.main[\"0\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "main",
      "index": "0",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 8080
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.main[\"1\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "main",
      "index": "1",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 8080
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lb_target_group_attachment.main[\"2\"]",
      "mode": "managed",
      "type": "aws_lb_target_group_attachment",
      "name": "main",
      "index": "2",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": null,
          "port": 8080
        },
        "after_unknown": {
          "id": true,
          "target_group_arn": true,
          "target_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_opensearch_domain.opensearch_cluster[0]",
      "mode": "managed",
      "type": "aws_opensearch_domain",
      "name": "opensearch_cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access_policies": "{\"Statement\":[{\"Action\":\"es:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:es:eu-central-1:444804106854:domain/camunda-os-cluster/*\"}],\"Version\":\"2012-10-17\"}",
          "advanced_options": {
            "rest.action.multi.allow_explicit_index": "true"
          },
          "advanced_security_options": [
            {
              "anonymous_auth_enabled": false,
              "enabled": false,
              "internal_user_database_enabled": true,
              "master_user_options": [
                {
                  "master_user_arn": null,
                  "master_user_name": "camunda",
                  "master_user_password": "camundarocks123"
                }
              ]
            }
          ],
          "cluster_config": [
            {
              "dedicated_master_count": null,
              "dedicated_master_enabled": false,
              "dedicated_master_type": null,
              "instance_count": 1,
              "instance_type": "t3.small.search",
              "multi_az_with_standby_enabled": null,
              "warm_count": null,
              "warm_enabled": false,
              "warm_type": null,
              "zone_awareness_config": [],
              "zone_awareness_enabled": null
            }
          ],
          "cognito_options": [],
          "domain_name": "camunda-os-cluster",
          "ebs_options": [
            {
              "ebs_enabled": true,
              "throughput": 125,
              "volume_size": 50,
              "volume_type": "gp3"
            }
          ],
          "encrypt_at_rest": [
            {
              "enabled": true
            }
          ],
          "engine_version": "OpenSearch_2.15",
          "log_publishing_options": [
            {
              "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
              "enabled": false,
              "log_type": "ES_APPLICATION_LOGS"
            },
            {
              "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
              "enabled": false,
              "log_type": "INDEX_SLOW_LOGS"
            },
            {
              "cloudwatch_log_group_arn": "arn:aws:logs:eu-central-1:444804106854:log-group:doesnotexistbutrequired",
              "enabled": false,
              "log_type": "SEARCH_SLOW_LOGS"
            }
          ],
          "node_to_node_encryption": [
            {
              "enabled": true
            }
          ],
          "snapshot_options": [
            {
              "automated_snapshot_start_hour": 0
            }
          ],
          "tags": null,
          "tags_all": {
            "managed_by": "Terraform"
          },
          "timeouts": {
            "create": "2h",
            "delete": null,
            "update": null
          },
          "vpc_options": [
            {}
          ]
        },
        "after_unknown": {
          "advanced_options": {},
          "advanced_security_options": [
            {
              "master_user_options": [
                {}
              ]
            }
          ],
          "arn": true,
          "auto_tune_options": true,
          "cluster_config": [
            {
              "cold_storage_options": true,
              "zone_awareness_config": []
            }
          ],
          "cognito_options": [],
          "dashboard_endpoint": true,
          "dashboard_endpoint_v2": true,
          "domain_endpoint_options": true,
          "domain_endpoint_v2_hosted_zone_id": true,
          "domain_id": true,
          "ebs_options": [
            {
              "iops": true
            }
          ],
          "encrypt_at_rest": [
            {
              "kms_key_id": true
            }
          ],
          "endpoint": true,
          "endpoint_v2": true,
          "id": true,
          "ip_address_type": true,
          "kibana_endpoint": true,
          "log_publishing_options": [
            {},
            {},
            {}
          ],
          "node_to_node_encryption": [
            {}
          ],
          "off_peak_window_options": true,
          "snapshot_options": [
            {}
          ],
          "software_update_options": true,
          "tags_all": {},
          "timeouts": {},
          "vpc_options": [
            {
              "availability_zones": true,
              "security_group_ids": true,
              "subnet_ids": true,
              "vpc_id": true
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "advanced_options": {},
          "advanced_security_options": [
            {
              "master_user_options": [
                {
                  "master_user_name": true,
                  "master_user_password": true
                }
              ]
            }
          ],
          "auto_tune_options": [],
          "cluster_config": [
            {
              "cold_storage_options": [],
              "zone_awareness_config": []
            }
          ],
          "cognito_options": [],
          "domain_endpoint_options": [],
          "ebs_options": [
            {}
          ],
          "encrypt_at_rest": [
            {}
          ],
          "log_publishing_options": [
            {},
            {},
            {}
          ],
          "node_to_node_encryption": [
            {}
          ],
          "off_peak_window_options": [],
          "snapshot_options": [
            {}
          ],
          "software_update_options": [],
          "tags_all": {},
          "timeouts": {},
          "vpc_options": [
            {
              "availability_zones": [],
              "security_group_ids": [],
              "subnet_ids": []
            }
          ]
        }
      }
    },
    {
      "address": "aws_security_group.allow_necessary_camunda_ports_within_vpc",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_necessary_camunda_ports_within_vpc",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow necessary Camunda ports within the VPC",
          "egress": [
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26500,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26500
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26501,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26501
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26502,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26502
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 8080,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 8080
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 9090,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9090
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 9600,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9600
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26500,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26500
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26501,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26501
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 26502,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26502
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 8080,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 8080
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 9090,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9090
            },
            {
              "cidr_blocks": [
                "10.200.0.0/16"
              ],
              "description": "",
              "from_port": 9600,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9600
            }
          ],
          "name": "allow_necessary_camunda_ports_within_vpc",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "allow_necessary_camunda_ports_within_vpc"
          },
          "tags_all": {
            "Name": "allow_necessary_camunda_ports_within_vpc",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.allow_remote_80_443",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_remote_80_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow remote HTTP and HTTPS traffic for e.g. package updates",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 80,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 80
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 80,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 80
            }
          ],
          "name": "allow_remote_80_443",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "allow_remote_80_443"
          },
          "tags_all": {
            "Name": "allow_remote_80_443",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.allow_remote_9090",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_remote_9090",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow remote traffic on 9090 for the LB",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 9090,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9090
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 9090,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 9090
            }
          ],
          "name": "allow_remote_9090",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "allow_remote_9090"
          },
          "tags_all": {
            "Name": "allow_remote_9090",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.allow_remote_grpc",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_remote_grpc",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow remote gRPC traffic",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 26500,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 26500
            }
          ],
          "name": "allow_remote_grpc",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "allow_remote_grpc"
          },
          "tags_all": {
            "Name": "allow_remote_grpc",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.allow_ssh",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_ssh",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow SSH traffic",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name": "allow_ssh",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "allow_ssh"
          },
          "tags_all": {
            "Name": "allow_ssh",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_volume_attachment.ebs_attachment[0]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_attachment",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdb",
          "force_detach": null,
          "skip_destroy": null,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_volume_attachment.ebs_attachment[1]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_attachment",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdb",
          "force_detach": null,
          "skip_destroy": null,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_volume_attachment.ebs_attachment[2]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_attachment",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdb",
          "force_detach": null,
          "skip_destroy": null,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_default_network_acl.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "subnet_ids": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default",
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_network_acl_id": true,
          "egress": [
            {},
            {}
          ],
          "id": true,
          "ingress": [
            {},
            {}
          ],
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_default_route_table.default[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "propagating_vgws": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default",
            "managed_by": "Terraform"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_route_table_id": true,
          "id": true,
          "owner_id": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_default_security_group.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "revoke_rules_on_delete": false,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-default",
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "description": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_eip.nat[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address": null,
          "associate_with_private_ip": null,
          "customer_owned_ipv4_pool": null,
          "domain": "vpc",
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-eu-central-1a"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-eu-central-1a",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "allocation_id": true,
          "arn": true,
          "association_id": true,
          "carrier_ip": true,
          "customer_owned_ip": true,
          "id": true,
          "instance": true,
          "ipam_pool_id": true,
          "network_border_group": true,
          "network_interface": true,
          "private_dns": true,
          "private_ip": true,
          "ptr_record": true,
          "public_dns": true,
          "public_ip": true,
          "public_ipv4_pool": true,
          "tags": {},
          "tags_all": {},
          "vpc": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "connectivity_type": "public",
          "secondary_allocation_ids": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-eu-central-1a"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-eu-central-1a",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "allocation_id": true,
          "association_id": true,
          "id": true,
          "network_interface_id": true,
          "private_ip": true,
          "public_ip": true,
          "secondary_private_ip_address_count": true,
          "secondary_private_ip_addresses": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "gateway_id": null,
          "local_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "nat_gateway_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "local_gateway_id": null,
          "nat_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "gateway_id": true,
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1a",
          "cidr_block": "10.200.0.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1a"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1a",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1b",
          "cidr_block": "10.200.16.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1b"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1b",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1c",
          "cidr_block": "10.200.32.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1c"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-private-eu-central-1c",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1a",
          "cidr_block": "10.200.64.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1a"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1a",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1b",
          "cidr_block": "10.200.80.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1b"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1b",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-central-1c",
          "cidr_block": "10.200.96.0/20",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1c"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc-public-eu-central-1c",
            "managed_by": "Terraform"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_vpc.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_generated_ipv6_cidr_block": null,
          "cidr_block": "10.200.0.0/16",
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_ipam_pool_id": null,
          "ipv6_netmask_length": null,
          "tags": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc"
          },
          "tags_all": {
            "Example": "camunda-vpc",
            "Name": "camunda-vpc",
            "managed_by": "Terraform"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_network_acl_id": true,
          "default_route_table_id": true,
          "default_security_group_id": true,
          "dhcp_options_id": true,
          "enable_network_address_usage_metrics": true,
          "id": true,
          "ipv6_association_id": true,
          "ipv6_cidr_block": true,
          "ipv6_cidr_block_network_border_group": true,
          "main_route_table_id": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    }
  ],
  "output_changes": {
    "alb_endpoint": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "aws_ami": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "ami-09e173854da66fbc9",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "aws_opensearch_domain": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "bastion_ip": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "camunda_ips": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        null,
        null,
        null
      ],
      "after_unknown": [
        true,
        true,
        true
      ],
      "before_sensitive": false,
      "after_sensitive": false
    },
    "nlb_endpoint": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_key": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": true,
      "after_sensitive": true
    },
    "public_key": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": true,
      "after_sensitive": true
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.9.7",
    "values": {
      "outputs": {
        "aws_ami": {
          "sensitive": false,
          "value": "ami-09e173854da66fbc9",
          "type": "string"
        },
        "private_key": {
          "sensitive": true,
          "value": "",
          "type": "string"
        },
        "public_key": {
          "sensitive": true,
          "value": "",
          "type": "string"
        }
      },
      "root_module": {
        "resources": [
          {
            "address": "data.aws_ami.debian",
            "mode": "data",
            "type": "aws_ami",
            "name": "debian",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "architecture": "x86_64",
              "arn": "arn:aws:ec2:eu-central-1::image/ami-09e173854da66fbc9",
              "block_device_mappings": [
                {
                  "device_name": "/dev/xvda",
                  "ebs": {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": "3000",
                    "snapshot_id": "snap-098d402c72822abab",
                    "throughput": "125",
                    "volume_size": "8",
                    "volume_type": "gp3"
                  },
                  "no_device": "",
                  "virtual_name": ""
                }
              ],
              "boot_mode": "",
              "creation_date": "2024-10-04T14:21:57.000Z",
              "deprecation_time": "2026-10-04T14:21:57.000Z",
              "description": "Debian 12 (20241004-1890)",
              "ena_support": true,
              "executable_users": null,
              "filter": [
                {
                  "name": "architecture",
                  "values": [
                    "x86_64"
                  ]
                },
                {
                  "name": "name",
                  "values": [
                    "debian-12-*"
                  ]
                }
              ],
              "hypervisor": "xen",
              "id": "ami-09e173854da66fbc9",
              "image_id": "ami-09e173854da66fbc9",
              "image_location": "amazon/debian-12-amd64-20241004-1890",
              "image_owner_alias": "amazon",
              "image_type": "machine",
              "imds_support": "",
              "include_deprecated": false,
              "kernel_id": "",
              "most_recent": true,
              "name": "debian-12-amd64-20241004-1890",
              "name_regex": null,
              "owner_id": "136693071363",
              "owners": [
                "136693071363"
              ],
              "platform": "",
              "platform_details": "Linux/UNIX",
              "product_codes": [],
              "public": true,
              "ramdisk_id": "",
              "root_device_name": "/dev/xvda",
              "root_device_type": "ebs",
              "root_snapshot_id": "snap-098d402c72822abab",
              "sriov_net_support": "simple",
              "state": "available",
              "state_reason": {
                "code": "UNSET",
                "message": "UNSET"
              },
              "tags": {},
              "timeouts": null,
              "tpm_support": "",
              "usage_operation": "RunInstances",
              "virtualization_type": "hvm"
            },
            "sensitive_values": {
              "block_device_mappings": [
                {
                  "ebs": {}
                }
              ],
              "filter": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "owners": [
                false
              ],
              "product_codes": [],
              "state_reason": {},
              "tags": {}
            }
          },
          {
            "address": "data.aws_availability_zones.available",
            "mode": "data",
            "type": "aws_availability_zones",
            "name": "available",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "all_availability_zones": null,
              "exclude_names": null,
              "exclude_zone_ids": null,
              "filter": null,
              "group_names": [
                "eu-central-1"
              ],
              "id": "eu-central-1",
              "names": [
                "eu-central-1a",
                "eu-central-1b",
                "eu-central-1c"
              ],
              "state": null,
              "timeouts": null,
              "zone_ids": [
                "euc1-az2",
                "euc1-az3",
                "euc1-az1"
              ]
            },
            "sensitive_values": {
              "group_names": [
                false
              ],
              "names": [
                false,
                false,
                false
              ],
              "zone_ids": [
                false,
                false,
                false
              ]
            }
          },
          {
            "address": "data.aws_caller_identity.current",
            "mode": "data",
            "type": "aws_caller_identity",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "account_id": "444804106854",
              "arn": "arn:aws:sts::444804106854:assumed-role/AWSReservedSSO_SystemAdministrator_555f3db864dcee7e/lars.lange@camunda.com",
              "id": "444804106854",
              "user_id": "AROAWPEDEBJTLKCMW6JXY:lars.lange@camunda.com"
            },
            "sensitive_values": {}
          },
          {
            "address": "data.aws_region.current",
            "mode": "data",
            "type": "aws_region",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "description": "Europe (Frankfurt)",
              "endpoint": "ec2.eu-central-1.amazonaws.com",
              "id": "eu-central-1",
              "name": "eu-central-1"
            },
            "sensitive_values": {}
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "version_constraint": "5.72.0",
        "expressions": {
          "default_tags": [
            {
              "tags": {
                "constant_value": {
                  "managed_by": "Terraform"
                }
              }
            }
          ]
        }
      },
      "tls": {
        "name": "tls",
        "full_name": "registry.terraform.io/hashicorp/tls",
        "version_constraint": "4.0.6"
      }
    },
    "root_module": {
      "outputs": {
        "alb_endpoint": {
          "expression": {
            "references": [
              "aws_lb.main"
            ]
          }
        },
        "aws_ami": {
          "expression": {
            "references": [
              "data.aws_ami.debian.id",
              "data.aws_ami.debian"
            ]
          },
          "description": "The AMI retrieved from AWS for the latest Debian 12 image. Make sure to once pin the aws_ami variable to avoid recreations."
        },
        "aws_opensearch_domain": {
          "expression": {
            "references": [
              "aws_opensearch_domain.opensearch_cluster"
            ]
          }
        },
        "bastion_ip": {
          "expression": {
            "references": [
              "aws_instance.bastion"
            ]
          }
        },
        "camunda_ips": {
          "expression": {
            "references": [
              "aws_instance.camunda"
            ]
          }
        },
        "nlb_endpoint": {
          "expression": {
            "references": [
              "aws_lb.grpc"
            ]
          }
        },
        "private_key": {
          "sensitive": true,
          "expression": {
            "references": [
              "tls_private_key.testing"
            ]
          }
        },
        "public_key": {
          "sensitive": true,
          "expression": {
            "references": [
              "tls_private_key.testing"
            ]
          }
        }
      },
      "resources": [
        {
          "address": "aws_cloudwatch_log_group.os_log_group",
          "mode": "managed",
          "type": "aws_cloudwatch_log_group",
          "name": "os_log_group",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "var.prefix"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_opensearch",
              "var.enable_opensearch_logging"
            ]
          }
        },
        {
          "address": "aws_cloudwatch_log_resource_policy.os_logging_policy",
          "mode": "managed",
          "type": "aws_cloudwatch_log_resource_policy",
          "name": "os_logging_policy",
          "provider_config_key": "aws",
          "expressions": {
            "policy_document": {
              "references": [
                "data.aws_iam_policy_document.os_logging_policy_document"
              ]
            },
            "policy_name": {
              "references": [
                "var.prefix"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_opensearch",
              "var.enable_opensearch_logging"
            ]
          }
        },
        {
          "address": "aws_ebs_volume.camunda",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "camunda",
          "provider_config_key": "aws",
          "expressions": {
            "availability_zone": {
              "references": [
                "module.vpc.azs",
                "module.vpc",
                "count.index"
              ]
            },
            "encrypted": {
              "constant_value": true
            },
            "kms_key_id": {
              "references": [
                "aws_kms_key.main.arn",
                "aws_kms_key.main"
              ]
            },
            "size": {
              "references": [
                "var.camunda_disk_size"
              ]
            },
            "tags": {
              "references": [
                "var.prefix",
                "count.index"
              ]
            },
            "type": {
              "constant_value": "gp3"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.instance_count"
            ]
          }
        },
        {
          "address": "aws_iam_instance_profile.cloudwatch_instance_profile",
          "mode": "managed",
          "type": "aws_iam_instance_profile",
          "name": "cloudwatch_instance_profile",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.cloudwatch.name",
                "aws_iam_role.cloudwatch"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_policy.cloudwatch_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "cloudwatch_policy",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Policy for CloudWatch to allow monitoring of the EC2 instances"
            },
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "policy": {}
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "cloudwatch",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {},
            "name": {
              "references": [
                "var.prefix"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy_attachment.cloudwatch_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "cloudwatch_policy_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.cloudwatch_policy.arn",
                "aws_iam_policy.cloudwatch_policy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.cloudwatch.name",
                "aws_iam_role.cloudwatch"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_instance.bastion",
          "mode": "managed",
          "type": "aws_instance",
          "name": "bastion",
          "provider_config_key": "aws",
          "expressions": {
            "ami": {
              "references": [
                "var.aws_ami",
                "data.aws_ami.debian.id",
                "data.aws_ami.debian",
                "var.aws_ami"
              ]
            },
            "associate_public_ip_address": {
              "constant_value": true
            },
            "instance_type": {
              "references": [
                "var.aws_instance_type_bastion"
              ]
            },
            "key_name": {
              "references": [
                "aws_key_pair.main.key_name",
                "aws_key_pair.main"
              ]
            },
            "subnet_id": {
              "references": [
                "module.vpc.public_subnets[0]",
                "module.vpc.public_subnets",
                "module.vpc"
              ]
            },
            "tags": {
              "references": [
                "var.prefix"
              ]
            },
            "vpc_security_group_ids": {
              "references": [
                "aws_security_group.allow_ssh.id",
                "aws_security_group.allow_ssh",
                "aws_security_group.allow_necessary_camunda_ports_within_vpc.id",
                "aws_security_group.allow_necessary_camunda_ports_within_vpc"
              ]
            }
          },
          "schema_version": 1,
          "count_expression": {
            "references": [
              "var.enable_jump_host"
            ]
          }
        },
        {
          "address": "aws_instance.camunda",
          "mode": "managed",
          "type": "aws_instance",
          "name": "camunda",
          "provider_config_key": "aws",
          "expressions": {
            "ami": {
              "references": [
                "var.aws_ami",
                "data.aws_ami.debian.id",
                "data.aws_ami.debian",
                "var.aws_ami"
              ]
            },
            "associate_public_ip_address": {
              "constant_value": false
            },
            "iam_instance_profile": {
              "references": [
                "aws_iam_instance_profile.cloudwatch_instance_profile.name",
                "aws_iam_instance_profile.cloudwatch_instance_profile"
              ]
            },
            "instance_type": {
              "references": [
                "var.aws_instance_type"
              ]
            },
            "key_name": {
              "references": [
                "aws_key_pair.main.key_name",
                "aws_key_pair.main"
              ]
            },
            "root_block_device": [
              {
                "delete_on_termination": {
                  "constant_value": true
                },
                "encrypted": {
                  "constant_value": true
                },
                "kms_key_id": {
                  "references": [
                    "aws_kms_key.main.arn",
                    "aws_kms_key.main"
                  ]
                },
                "volume_size": {
                  "constant_value": 10
                },
                "volume_type": {
                  "constant_value": "gp3"
                }
              }
            ],
            "subnet_id": {
              "references": [
                "module.vpc.private_subnets",
                "module.vpc",
                "count.index"
              ]
            },
            "tags": {
              "references": [
                "var.prefix",
                "count.index"
              ]
            },
            "user_data": {
              "references": [
                "local.camunda_extra_disk_name"
              ]
            },
            "vpc_security_group_ids": {
              "references": [
                "aws_security_group.allow_necessary_camunda_ports_within_vpc.id",
                "aws_security_group.allow_necessary_camunda_ports_within_vpc",
                "aws_security_group.allow_remote_80_443.id",
                "aws_security_group.allow_remote_80_443",
                "aws_security_group.allow_remote_grpc.id",
                "aws_security_group.allow_remote_grpc"
              ]
            }
          },
          "schema_version": 1,
          "count_expression": {
            "references": [
              "var.instance_count"
            ]
          }
        },
        {
          "address": "aws_key_pair.main",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "main",
          "provider_config_key": "aws",
          "expressions": {
            "key_name": {
              "references": [
                "var.prefix"
              ]
            },
            "public_key": {
              "references": [
                "var.generate_ssh_key_pair",
                "tls_private_key.testing[0].public_key_openssh",
                "tls_private_key.testing[0]",
                "tls_private_key.testing",
                "var.pub_key_path"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_kms_key.main",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "main",
          "provider_config_key": "aws",
          "expressions": {
            "deletion_window_in_days": {
              "constant_value": 7
            },
            "description": {
              "references": [
                "var.prefix"
              ]
            },
            "enable_key_rotation": {
              "constant_value": true
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lb.grpc",
          "mode": "managed",
          "type": "aws_lb",
          "name": "grpc",
          "provider_config_key": "aws",
          "expressions": {
            "internal": {
              "constant_value": false
            },
            "load_balancer_type": {
              "constant_value": "network"
            },
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "subnets": {
              "references": [
                "module.vpc.public_subnets",
                "module.vpc"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_nlb"
            ]
          }
        },
        {
          "address": "aws_lb.main",
          "mode": "managed",
          "type": "aws_lb",
          "name": "main",
          "provider_config_key": "aws",
          "expressions": {
            "internal": {
              "constant_value": false
            },
            "load_balancer_type": {
              "constant_value": "application"
            },
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "security_groups": {
              "references": [
                "aws_security_group.allow_remote_80_443.id",
                "aws_security_group.allow_remote_80_443",
                "aws_security_group.allow_remote_9090.id",
                "aws_security_group.allow_remote_9090",
                "aws_security_group.allow_necessary_camunda_ports_within_vpc.id",
                "aws_security_group.allow_necessary_camunda_ports_within_vpc"
              ]
            },
            "subnets": {
              "references": [
                "module.vpc.public_subnets",
                "module.vpc"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_alb"
            ]
          }
        },
        {
          "address": "aws_lb_listener.grpc_26500",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "grpc_26500",
          "provider_config_key": "aws",
          "expressions": {
            "default_action": [
              {
                "target_group_arn": {
                  "references": [
                    "aws_lb_target_group.grpc.arn",
                    "aws_lb_target_group.grpc"
                  ]
                },
                "type": {
                  "constant_value": "forward"
                }
              }
            ],
            "load_balancer_arn": {
              "references": [
                "aws_lb.grpc[0].arn",
                "aws_lb.grpc[0]",
                "aws_lb.grpc"
              ]
            },
            "port": {
              "constant_value": "80"
            },
            "protocol": {
              "constant_value": "TCP"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_nlb"
            ]
          }
        },
        {
          "address": "aws_lb_listener.http_8080",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "http_8080",
          "provider_config_key": "aws",
          "expressions": {
            "default_action": [
              {
                "target_group_arn": {
                  "references": [
                    "aws_lb_target_group.main.arn",
                    "aws_lb_target_group.main"
                  ]
                },
                "type": {
                  "constant_value": "forward"
                }
              }
            ],
            "load_balancer_arn": {
              "references": [
                "aws_lb.main[0].arn",
                "aws_lb.main[0]",
                "aws_lb.main"
              ]
            },
            "port": {
              "constant_value": "80"
            },
            "protocol": {
              "constant_value": "HTTP"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_alb"
            ]
          }
        },
        {
          "address": "aws_lb_listener.http_9090",
          "mode": "managed",
          "type": "aws_lb_listener",
          "name": "http_9090",
          "provider_config_key": "aws",
          "expressions": {
            "default_action": [
              {
                "target_group_arn": {
                  "references": [
                    "aws_lb_target_group.connectors.arn",
                    "aws_lb_target_group.connectors"
                  ]
                },
                "type": {
                  "constant_value": "forward"
                }
              }
            ],
            "load_balancer_arn": {
              "references": [
                "aws_lb.main[0].arn",
                "aws_lb.main[0]",
                "aws_lb.main"
              ]
            },
            "port": {
              "constant_value": "9090"
            },
            "protocol": {
              "constant_value": "HTTP"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_alb"
            ]
          }
        },
        {
          "address": "aws_lb_target_group.connectors",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "connectors",
          "provider_config_key": "aws",
          "expressions": {
            "health_check": [
              {
                "healthy_threshold": {
                  "constant_value": 2
                },
                "interval": {
                  "constant_value": 30
                },
                "path": {
                  "constant_value": "/actuator/health/"
                },
                "port": {
                  "constant_value": "9090"
                },
                "protocol": {
                  "constant_value": "HTTP"
                },
                "timeout": {
                  "constant_value": 5
                },
                "unhealthy_threshold": {
                  "constant_value": 2
                }
              }
            ],
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "port": {
              "constant_value": 9090
            },
            "protocol": {
              "constant_value": "HTTP"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lb_target_group.grpc",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "grpc",
          "provider_config_key": "aws",
          "expressions": {
            "health_check": [
              {
                "healthy_threshold": {
                  "constant_value": 2
                },
                "interval": {
                  "constant_value": 30
                },
                "port": {
                  "constant_value": "26500"
                },
                "protocol": {
                  "constant_value": "TCP"
                },
                "timeout": {
                  "constant_value": 5
                },
                "unhealthy_threshold": {
                  "constant_value": 2
                }
              }
            ],
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "port": {
              "constant_value": 26500
            },
            "protocol": {
              "constant_value": "TCP"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lb_target_group.main",
          "mode": "managed",
          "type": "aws_lb_target_group",
          "name": "main",
          "provider_config_key": "aws",
          "expressions": {
            "health_check": [
              {
                "healthy_threshold": {
                  "constant_value": 2
                },
                "interval": {
                  "constant_value": 30
                },
                "path": {
                  "constant_value": "/"
                },
                "port": {
                  "constant_value": "8080"
                },
                "protocol": {
                  "constant_value": "HTTP"
                },
                "timeout": {
                  "constant_value": 5
                },
                "unhealthy_threshold": {
                  "constant_value": 2
                }
              }
            ],
            "name": {
              "references": [
                "var.prefix"
              ]
            },
            "port": {
              "constant_value": 8080
            },
            "protocol": {
              "constant_value": "HTTP"
            },
            "stickiness": [
              {
                "cookie_duration": {
                  "constant_value": 43200
                },
                "enabled": {
                  "constant_value": true
                },
                "type": {
                  "constant_value": "lb_cookie"
                }
              }
            ],
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lb_target_group_attachment.connectors",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "connectors",
          "provider_config_key": "aws",
          "expressions": {
            "port": {
              "constant_value": 9090
            },
            "target_group_arn": {
              "references": [
                "aws_lb_target_group.connectors.arn",
                "aws_lb_target_group.connectors"
              ]
            },
            "target_id": {
              "references": [
                "each.value.id",
                "each.value"
              ]
            }
          },
          "schema_version": 0,
          "for_each_expression": {
            "references": [
              "aws_instance.camunda"
            ]
          },
          "depends_on": [
            "aws_instance.camunda"
          ]
        },
        {
          "address": "aws_lb_target_group_attachment.grpc",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "grpc",
          "provider_config_key": "aws",
          "expressions": {
            "port": {
              "constant_value": 26500
            },
            "target_group_arn": {
              "references": [
                "aws_lb_target_group.grpc.arn",
                "aws_lb_target_group.grpc"
              ]
            },
            "target_id": {
              "references": [
                "each.value.id",
                "each.value"
              ]
            }
          },
          "schema_version": 0,
          "for_each_expression": {
            "references": [
              "aws_instance.camunda"
            ]
          },
          "depends_on": [
            "aws_instance.camunda"
          ]
        },
        {
          "address": "aws_lb_target_group_attachment.main",
          "mode": "managed",
          "type": "aws_lb_target_group_attachment",
          "name": "main",
          "provider_config_key": "aws",
          "expressions": {
            "port": {
              "constant_value": 8080
            },
            "target_group_arn": {
              "references": [
                "aws_lb_target_group.main.arn",
                "aws_lb_target_group.main"
              ]
            },
            "target_id": {
              "references": [
                "each.value.id",
                "each.value"
              ]
            }
          },
          "schema_version": 0,
          "for_each_expression": {
            "references": [
              "aws_instance.camunda"
            ]
          },
          "depends_on": [
            "aws_instance.camunda"
          ]
        },
        {
          "address": "aws_opensearch_domain.opensearch_cluster",
          "mode": "managed",
          "type": "aws_opensearch_domain",
          "name": "opensearch_cluster",
          "provider_config_key": "aws",
          "expressions": {
            "access_policies": {
              "references": [
                "data.aws_region.current.name",
                "data.aws_region.current",
                "data.aws_caller_identity.current.account_id",
                "data.aws_caller_identity.current",
                "var.prefix"
              ]
            },
            "advanced_options": {
              "constant_value": {
                "rest.action.multi.allow_explicit_index": true
              }
            },
            "advanced_security_options": [
              {
                "anonymous_auth_enabled": {
                  "constant_value": false
                },
                "enabled": {
                  "constant_value": false
                },
                "internal_user_database_enabled": {
                  "constant_value": true
                },
                "master_user_options": [
                  {
                    "master_user_name": {
                      "references": [
                        "var.opensearch_master_username"
                      ]
                    },
                    "master_user_password": {
                      "references": [
                        "var.opensearch_master_password"
                      ]
                    }
                  }
                ]
              }
            ],
            "cluster_config": [
              {
                "instance_count": {
                  "references": [
                    "var.opensearch_instance_count"
                  ]
                },
                "instance_type": {
                  "constant_value": "t3.small.search"
                },
                "warm_enabled": {
                  "constant_value": false
                }
              }
            ],
            "domain_name": {
              "references": [
                "var.prefix"
              ]
            },
            "ebs_options": [
              {
                "ebs_enabled": {
                  "constant_value": true
                },
                "throughput": {
                  "references": [
                    "var.opensearch_disk_throughput"
                  ]
                },
                "volume_size": {
                  "references": [
                    "var.opensearch_disk_size"
                  ]
                },
                "volume_type": {
                  "constant_value": "gp3"
                }
              }
            ],
            "encrypt_at_rest": [
              {
                "enabled": {
                  "constant_value": true
                },
                "kms_key_id": {
                  "references": [
                    "aws_kms_key.main.arn",
                    "aws_kms_key.main"
                  ]
                }
              }
            ],
            "engine_version": {
              "constant_value": "OpenSearch_2.15"
            },
            "node_to_node_encryption": [
              {
                "enabled": {
                  "constant_value": true
                }
              }
            ],
            "snapshot_options": [
              {
                "automated_snapshot_start_hour": {
                  "constant_value": 0
                }
              }
            ],
            "timeouts": {
              "create": {
                "constant_value": "2h"
              }
            },
            "vpc_options": [
              {
                "security_group_ids": {
                  "references": [
                    "aws_security_group.allow_necessary_camunda_ports_within_vpc.id",
                    "aws_security_group.allow_necessary_camunda_ports_within_vpc"
                  ]
                },
                "subnet_ids": {
                  "references": [
                    "module.vpc.private_subnets[1]",
                    "module.vpc.private_subnets",
                    "module.vpc"
                  ]
                }
              }
            ]
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_opensearch"
            ]
          }
        },
        {
          "address": "aws_security_group.allow_necessary_camunda_ports_within_vpc",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_necessary_camunda_ports_within_vpc",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow necessary Camunda ports within the VPC"
            },
            "ingress": {
              "references": [
                "module.vpc.vpc_cidr_block",
                "module.vpc"
              ]
            },
            "name": {
              "constant_value": "allow_necessary_camunda_ports_within_vpc"
            },
            "tags": {
              "constant_value": {
                "Name": "allow_necessary_camunda_ports_within_vpc"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.allow_remote_80_443",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_80_443",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow remote HTTP and HTTPS traffic for e.g. package updates"
            },
            "egress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 80,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 80
                },
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 443,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 443
                }
              ]
            },
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 80,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 80
                },
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 443,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 443
                }
              ]
            },
            "name": {
              "constant_value": "allow_remote_80_443"
            },
            "tags": {
              "constant_value": {
                "Name": "allow_remote_80_443"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.allow_remote_9090",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_9090",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow remote traffic on 9090 for the LB"
            },
            "egress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 9090,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 9090
                }
              ]
            },
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 9090,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 9090
                }
              ]
            },
            "name": {
              "constant_value": "allow_remote_9090"
            },
            "tags": {
              "constant_value": {
                "Name": "allow_remote_9090"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.allow_remote_grpc",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_remote_grpc",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow remote gRPC traffic"
            },
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 26500,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 26500
                }
              ]
            },
            "name": {
              "constant_value": "allow_remote_grpc"
            },
            "tags": {
              "constant_value": {
                "Name": "allow_remote_grpc"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.allow_ssh",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "allow_ssh",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow SSH traffic"
            },
            "egress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                }
              ]
            },
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                }
              ]
            },
            "name": {
              "constant_value": "allow_ssh"
            },
            "tags": {
              "constant_value": {
                "Name": "allow_ssh"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_volume_attachment.ebs_attachment",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "device_name": {
              "references": [
                "local.camunda_extra_disk_name"
              ]
            },
            "instance_id": {
              "references": [
                "aws_instance.camunda",
                "count.index"
              ]
            },
            "volume_id": {
              "references": [
                "aws_ebs_volume.camunda",
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.instance_count"
            ]
          }
        },
        {
          "address": "tls_private_key.testing",
          "mode": "managed",
          "type": "tls_private_key",
          "name": "testing",
          "provider_config_key": "tls",
          "expressions": {
            "algorithm": {
              "constant_value": "RSA"
            },
            "rsa_bits": {
              "constant_value": 4096
            }
          },
          "schema_version": 1,
          "count_expression": {
            "references": [
              "var.generate_ssh_key_pair"
            ]
          }
        },
        {
          "address": "data.aws_ami.debian",
          "mode": "data",
          "type": "aws_ami",
          "name": "debian",
          "provider_config_key": "aws",
          "expressions": {
            "filter": [
              {
                "name": {
                  "constant_value": "name"
                },
                "values": {
                  "constant_value": [
                    "debian-12-*"
                  ]
                }
              },
              {
                "name": {
                  "constant_value": "architecture"
                },
                "values": {
                  "constant_value": [
                    "x86_64"
                  ]
                }
              }
            ],
            "most_recent": {
              "constant_value": true
            },
            "owners": {
              "constant_value": [
                "136693071363"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_availability_zones.available",
          "mode": "data",
          "type": "aws_availability_zones",
          "name": "available",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_caller_identity.current",
          "mode": "data",
          "type": "aws_caller_identity",
          "name": "current",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.os_logging_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "os_logging_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "logs:PutLogEvents",
                    "logs:PutLogEventsBatch",
                    "logs:CreateLogStream"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "es.amazonaws.com"
                      ]
                    },
                    "type": {
                      "constant_value": "Service"
                    }
                  }
                ],
                "resources": {
                  "constant_value": [
                    "arn:aws:logs:*"
                  ]
                }
              }
            ]
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.enable_opensearch",
              "var.enable_opensearch_logging"
            ]
          }
        },
        {
          "address": "data.aws_region.current",
          "mode": "data",
          "type": "aws_region",
          "name": "current",
          "provider_config_key": "aws",
          "schema_version": 0
        }
      ],
      "module_calls": {
        "vpc": {
          "source": "terraform-aws-modules/vpc/aws",
          "expressions": {
            "azs": {
              "references": [
                "local.azs"
              ]
            },
            "cidr": {
              "references": [
                "local.vpc_cidr"
              ]
            },
            "create_flow_log_cloudwatch_iam_role": {
              "references": [
                "var.enable_vpc_logging"
              ]
            },
            "create_flow_log_cloudwatch_log_group": {
              "references": [
                "var.enable_vpc_logging"
              ]
            },
            "enable_nat_gateway": {
              "constant_value": true
            },
            "flow_log_cloudwatch_log_group_kms_key_id": {
              "references": [
                "var.enable_vpc_logging",
                "aws_kms_key.main.id",
                "aws_kms_key.main"
              ]
            },
            "flow_log_cloudwatch_log_group_name_prefix": {
              "references": [
                "var.enable_vpc_logging",
                "var.prefix"
              ]
            },
            "flow_log_cloudwatch_log_group_retention_in_days": {
              "references": [
                "var.enable_vpc_logging"
              ]
            },
            "name": {
              "references": [
                "local.name"
              ]
            },
            "one_nat_gateway_per_az": {
              "constant_value": false
            },
            "private_subnets": {
              "references": [
                "local.azs",
                "local.vpc_cidr"
              ]
            },
            "public_subnets": {
              "references": [
                "local.azs",
                "local.vpc_cidr"
              ]
            },
            "single_nat_gateway": {
              "constant_value": true
            },
            "tags": {
              "references": [
                "local.tags"
              ]
            }
          },
          "module": {
            "outputs": {
              "azs": {
                "expression": {
                  "references": [
                    "var.azs"
                  ]
                },
                "description": "A list of availability zones specified as argument to this module"
              },
              "cgw_arns": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of ARNs of Customer Gateway"
              },
              "cgw_ids": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of IDs of Customer Gateway"
              },
              "database_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_internet_gateway[0].id",
                    "aws_route.database_internet_gateway[0]",
                    "aws_route.database_internet_gateway"
                  ]
                },
                "description": "ID of the database internet gateway route"
              },
              "database_ipv6_egress_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_ipv6_egress[0].id",
                    "aws_route.database_ipv6_egress[0]",
                    "aws_route.database_ipv6_egress"
                  ]
                },
                "description": "ID of the database IPv6 egress route"
              },
              "database_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.database_nat_gateway"
                  ]
                },
                "description": "List of IDs of the database nat gateway route"
              },
              "database_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.database[0].arn",
                    "aws_network_acl.database[0]",
                    "aws_network_acl.database"
                  ]
                },
                "description": "ARN of the database network ACL"
              },
              "database_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.database[0].id",
                    "aws_network_acl.database[0]",
                    "aws_network_acl.database"
                  ]
                },
                "description": "ID of the database network ACL"
              },
              "database_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.database"
                  ]
                },
                "description": "List of IDs of the database route table association"
              },
              "database_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.database",
                    "aws_route_table.database",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of database route tables"
              },
              "database_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of ARNs of database subnets"
              },
              "database_subnet_group": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database[0].id",
                    "aws_db_subnet_group.database[0]",
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "ID of database subnet group"
              },
              "database_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database[0].name",
                    "aws_db_subnet_group.database[0]",
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "Name of database subnet group"
              },
              "database_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IDs of database subnets"
              },
              "database_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of cidr_blocks of database subnets"
              },
              "database_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
              },
              "default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_network_acl_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL"
              },
              "default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_route_table_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default route table"
              },
              "default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_security_group_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on VPC creation"
              },
              "default_vpc_arn": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].arn",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ARN of the Default VPC"
              },
              "default_vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].cidr_block",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The CIDR block of the Default VPC"
              },
              "default_vpc_default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_network_acl_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL of the Default VPC"
              },
              "default_vpc_default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_route_table_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default route table of the Default VPC"
              },
              "default_vpc_default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_security_group_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on Default VPC creation"
              },
              "default_vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].enable_dns_hostnames",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS hostname support"
              },
              "default_vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].enable_dns_support",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS support"
              },
              "default_vpc_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the Default VPC"
              },
              "default_vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].instance_tenancy",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within Default VPC"
              },
              "default_vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].main_route_table_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with the Default VPC"
              },
              "dhcp_options_id": {
                "expression": {
                  "references": [
                    "aws_vpc_dhcp_options.this[0].id",
                    "aws_vpc_dhcp_options.this[0]",
                    "aws_vpc_dhcp_options.this"
                  ]
                },
                "description": "The ID of the DHCP options"
              },
              "egress_only_internet_gateway_id": {
                "expression": {
                  "references": [
                    "aws_egress_only_internet_gateway.this[0].id",
                    "aws_egress_only_internet_gateway.this[0]",
                    "aws_egress_only_internet_gateway.this"
                  ]
                },
                "description": "The ID of the egress only Internet Gateway"
              },
              "elasticache_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache[0].arn",
                    "aws_network_acl.elasticache[0]",
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ARN of the elasticache network ACL"
              },
              "elasticache_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache[0].id",
                    "aws_network_acl.elasticache[0]",
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ID of the elasticache network ACL"
              },
              "elasticache_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.elasticache"
                  ]
                },
                "description": "List of IDs of the elasticache route table association"
              },
              "elasticache_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.elasticache",
                    "local.private_route_table_ids"
                  ]
                },
                "description": "List of IDs of elasticache route tables"
              },
              "elasticache_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of ARNs of elasticache subnets"
              },
              "elasticache_subnet_group": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache[0].id",
                    "aws_elasticache_subnet_group.elasticache[0]",
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "ID of elasticache subnet group"
              },
              "elasticache_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache[0].name",
                    "aws_elasticache_subnet_group.elasticache[0]",
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IDs of elasticache subnets"
              },
              "elasticache_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of cidr_blocks of elasticache subnets"
              },
              "elasticache_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
              },
              "igw_arn": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this[0].arn",
                    "aws_internet_gateway.this[0]",
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ARN of the Internet Gateway"
              },
              "igw_id": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this[0].id",
                    "aws_internet_gateway.this[0]",
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ID of the Internet Gateway"
              },
              "intra_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra[0].arn",
                    "aws_network_acl.intra[0]",
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ARN of the intra network ACL"
              },
              "intra_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra[0].id",
                    "aws_network_acl.intra[0]",
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ID of the intra network ACL"
              },
              "intra_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.intra"
                  ]
                },
                "description": "List of IDs of the intra route table association"
              },
              "intra_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.intra"
                  ]
                },
                "description": "List of IDs of intra route tables"
              },
              "intra_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of ARNs of intra subnets"
              },
              "intra_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IDs of intra subnets"
              },
              "intra_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of cidr_blocks of intra subnets"
              },
              "intra_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
              },
              "name": {
                "expression": {
                  "references": [
                    "var.name"
                  ]
                },
                "description": "The name of the VPC specified as argument to this module"
              },
              "nat_ids": {
                "expression": {
                  "references": [
                    "aws_eip.nat"
                  ]
                },
                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
              },
              "nat_public_ips": {
                "expression": {
                  "references": [
                    "var.reuse_nat_ips",
                    "var.external_nat_ips",
                    "aws_eip.nat"
                  ]
                },
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
              },
              "natgw_ids": {
                "expression": {
                  "references": [
                    "aws_nat_gateway.this"
                  ]
                },
                "description": "List of NAT Gateway IDs"
              },
              "natgw_interface_ids": {
                "expression": {
                  "references": [
                    "aws_nat_gateway.this"
                  ]
                },
                "description": "List of Network Interface IDs assigned to NAT Gateways"
              },
              "outpost_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost[0].arn",
                    "aws_network_acl.outpost[0]",
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ARN of the outpost network ACL"
              },
              "outpost_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost[0].id",
                    "aws_network_acl.outpost[0]",
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ID of the outpost network ACL"
              },
              "outpost_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of ARNs of outpost subnets"
              },
              "outpost_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IDs of outpost subnets"
              },
              "outpost_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of cidr_blocks of outpost subnets"
              },
              "outpost_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
              },
              "private_ipv6_egress_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_ipv6_egress"
                  ]
                },
                "description": "List of IDs of the ipv6 egress route"
              },
              "private_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_nat_gateway"
                  ]
                },
                "description": "List of IDs of the private nat gateway route"
              },
              "private_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.private[0].arn",
                    "aws_network_acl.private[0]",
                    "aws_network_acl.private"
                  ]
                },
                "description": "ARN of the private network ACL"
              },
              "private_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.private[0].id",
                    "aws_network_acl.private[0]",
                    "aws_network_acl.private"
                  ]
                },
                "description": "ID of the private network ACL"
              },
              "private_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.private"
                  ]
                },
                "description": "List of IDs of the private route table association"
              },
              "private_route_table_ids": {
                "expression": {
                  "references": [
                    "local.private_route_table_ids"
                  ]
                },
                "description": "List of IDs of private route tables"
              },
              "private_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of ARNs of private subnets"
              },
              "private_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IDs of private subnets"
              },
              "private_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of cidr_blocks of private subnets"
              },
              "private_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
              },
              "public_internet_gateway_ipv6_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway_ipv6[0].id",
                    "aws_route.public_internet_gateway_ipv6[0]",
                    "aws_route.public_internet_gateway_ipv6"
                  ]
                },
                "description": "ID of the IPv6 internet gateway route"
              },
              "public_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway[0].id",
                    "aws_route.public_internet_gateway[0]",
                    "aws_route.public_internet_gateway"
                  ]
                },
                "description": "ID of the internet gateway route"
              },
              "public_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.public[0].arn",
                    "aws_network_acl.public[0]",
                    "aws_network_acl.public"
                  ]
                },
                "description": "ARN of the public network ACL"
              },
              "public_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.public[0].id",
                    "aws_network_acl.public[0]",
                    "aws_network_acl.public"
                  ]
                },
                "description": "ID of the public network ACL"
              },
              "public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.public"
                  ]
                },
                "description": "List of IDs of the public route table association"
              },
              "public_route_table_ids": {
                "expression": {
                  "references": [
                    "local.public_route_table_ids"
                  ]
                },
                "description": "List of IDs of public route tables"
              },
              "public_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of ARNs of public subnets"
              },
              "public_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IDs of public subnets"
              },
              "public_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of cidr_blocks of public subnets"
              },
              "public_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
              },
              "redshift_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift[0].arn",
                    "aws_network_acl.redshift[0]",
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ARN of the redshift network ACL"
              },
              "redshift_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift[0].id",
                    "aws_network_acl.redshift[0]",
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ID of the redshift network ACL"
              },
              "redshift_public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift_public"
                  ]
                },
                "description": "List of IDs of the public redshift route table association"
              },
              "redshift_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift"
                  ]
                },
                "description": "List of IDs of the redshift route table association"
              },
              "redshift_route_table_ids": {
                "expression": {
                  "references": [
                    "local.redshift_route_table_ids",
                    "local.redshift_route_table_ids",
                    "var.enable_public_redshift",
                    "local.public_route_table_ids",
                    "local.private_route_table_ids"
                  ]
                },
                "description": "List of IDs of redshift route tables"
              },
              "redshift_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of ARNs of redshift subnets"
              },
              "redshift_subnet_group": {
                "expression": {
                  "references": [
                    "aws_redshift_subnet_group.redshift[0].id",
                    "aws_redshift_subnet_group.redshift[0]",
                    "aws_redshift_subnet_group.redshift"
                  ]
                },
                "description": "ID of redshift subnet group"
              },
              "redshift_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IDs of redshift subnets"
              },
              "redshift_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of cidr_blocks of redshift subnets"
              },
              "redshift_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
              },
              "this_customer_gateway": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "Map of Customer Gateway attributes"
              },
              "vgw_arn": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this[0].arn",
                    "aws_vpn_gateway.this[0]",
                    "aws_vpn_gateway.this"
                  ]
                },
                "description": "The ARN of the VPN Gateway"
              },
              "vgw_id": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this[0].id",
                    "aws_vpn_gateway.this[0]",
                    "aws_vpn_gateway.this",
                    "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                    "aws_vpn_gateway_attachment.this[0]",
                    "aws_vpn_gateway_attachment.this"
                  ]
                },
                "description": "The ID of the VPN Gateway"
              },
              "vpc_arn": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].arn",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ARN of the VPC"
              },
              "vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].cidr_block",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The CIDR block of the VPC"
              },
              "vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].enable_dns_hostnames",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS hostname support"
              },
              "vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].enable_dns_support",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS support"
              },
              "vpc_flow_log_cloudwatch_iam_role_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_iam_role_arn"
                  ]
                },
                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
              },
              "vpc_flow_log_deliver_cross_account_role": {
                "expression": {
                  "references": [
                    "aws_flow_log.this[0].deliver_cross_account_role",
                    "aws_flow_log.this[0]",
                    "aws_flow_log.this"
                  ]
                },
                "description": "The ARN of the IAM role used when pushing logs cross account"
              },
              "vpc_flow_log_destination_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_destination_arn"
                  ]
                },
                "description": "The ARN of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_destination_type": {
                "expression": {
                  "references": [
                    "var.flow_log_destination_type"
                  ]
                },
                "description": "The type of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_id": {
                "expression": {
                  "references": [
                    "aws_flow_log.this[0].id",
                    "aws_flow_log.this[0]",
                    "aws_flow_log.this"
                  ]
                },
                "description": "The ID of the Flow Log resource"
              },
              "vpc_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the VPC"
              },
              "vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].instance_tenancy",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within VPC"
              },
              "vpc_ipv6_association_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].ipv6_association_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The association ID for the IPv6 CIDR block"
              },
              "vpc_ipv6_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].ipv6_cidr_block",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The IPv6 CIDR block"
              },
              "vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].main_route_table_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with this VPC"
              },
              "vpc_owner_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].owner_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the AWS account that owns the VPC"
              },
              "vpc_secondary_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_vpc_ipv4_cidr_block_association.this"
                  ]
                },
                "description": "List of secondary CIDR blocks of the VPC"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.flow_log",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "flow_log",
                "provider_config_key": "aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_kms_key_id"
                    ]
                  },
                  "log_group_class": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_class"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_name_prefix",
                      "local.flow_log_cloudwatch_log_group_name_suffix"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_retention_in_days"
                    ]
                  },
                  "skip_destroy": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_skip_destroy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "aws_customer_gateway.this",
                "mode": "managed",
                "type": "aws_customer_gateway",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "bgp_asn": {
                    "references": [
                      "each.value[\"bgp_asn\"]",
                      "each.value"
                    ]
                  },
                  "device_name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "ip_address": {
                    "references": [
                      "each.value[\"ip_address\"]",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "each.key",
                      "var.tags",
                      "var.customer_gateway_tags"
                    ]
                  },
                  "type": {
                    "constant_value": "ipsec.1"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.customer_gateways"
                  ]
                }
              },
              {
                "address": "aws_db_subnet_group.database",
                "mode": "managed",
                "type": "aws_db_subnet_group",
                "name": "database",
                "provider_config_key": "aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.database_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_subnets",
                    "var.create_database_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_default_network_acl.this",
                "mode": "managed",
                "type": "aws_default_network_acl",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "default_network_acl_id": {
                    "references": [
                      "aws_vpc.this[0].default_network_acl_id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  },
                  "subnet_ids": {
                    "constant_value": null
                  },
                  "tags": {
                    "references": [
                      "var.default_network_acl_name",
                      "var.name",
                      "var.tags",
                      "var.default_network_acl_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.manage_default_network_acl"
                  ]
                }
              },
              {
                "address": "aws_default_route_table.default",
                "mode": "managed",
                "type": "aws_default_route_table",
                "name": "default",
                "provider_config_key": "aws",
                "expressions": {
                  "default_route_table_id": {
                    "references": [
                      "aws_vpc.this[0].default_route_table_id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  },
                  "propagating_vgws": {
                    "references": [
                      "var.default_route_table_propagating_vgws"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_route_table_name",
                      "var.name",
                      "var.tags",
                      "var.default_route_table_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    },
                    "update": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.manage_default_route_table"
                  ]
                }
              },
              {
                "address": "aws_default_security_group.this",
                "mode": "managed",
                "type": "aws_default_security_group",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.default_security_group_name",
                      "var.name",
                      "var.tags",
                      "var.default_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.manage_default_security_group"
                  ]
                }
              },
              {
                "address": "aws_default_vpc.this",
                "mode": "managed",
                "type": "aws_default_vpc",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "enable_dns_hostnames": {
                    "references": [
                      "var.default_vpc_enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.default_vpc_enable_dns_support"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_vpc_name",
                      "var.tags",
                      "var.default_vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.manage_default_vpc"
                  ]
                }
              },
              {
                "address": "aws_egress_only_internet_gateway.this",
                "mode": "managed",
                "type": "aws_egress_only_internet_gateway",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "local.max_subnet_length"
                  ]
                }
              },
              {
                "address": "aws_eip.nat",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "provider_config_key": "aws",
                "expressions": {
                  "domain": {
                    "constant_value": "vpc"
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_eip_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_nat_gateway",
                    "var.reuse_nat_ips",
                    "local.nat_gateway_count"
                  ]
                },
                "depends_on": [
                  "aws_internet_gateway.this"
                ]
              },
              {
                "address": "aws_elasticache_subnet_group.elasticache",
                "mode": "managed",
                "type": "aws_elasticache_subnet_group",
                "name": "elasticache",
                "provider_config_key": "aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.elasticache_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.elasticache_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_subnets",
                    "var.create_elasticache_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_flow_log.this",
                "mode": "managed",
                "type": "aws_flow_log",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "deliver_cross_account_role": {
                    "references": [
                      "var.flow_log_deliver_cross_account_role"
                    ]
                  },
                  "iam_role_arn": {
                    "references": [
                      "local.flow_log_iam_role_arn"
                    ]
                  },
                  "log_destination": {
                    "references": [
                      "local.flow_log_destination_arn"
                    ]
                  },
                  "log_destination_type": {
                    "references": [
                      "var.flow_log_destination_type"
                    ]
                  },
                  "log_format": {
                    "references": [
                      "var.flow_log_log_format"
                    ]
                  },
                  "max_aggregation_interval": {
                    "references": [
                      "var.flow_log_max_aggregation_interval"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  },
                  "traffic_type": {
                    "references": [
                      "var.flow_log_traffic_type"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.enable_flow_log"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.vpc_flow_log_iam_policy_use_name_prefix",
                      "var.vpc_flow_log_iam_policy_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.vpc_flow_log_iam_policy_use_name_prefix",
                      "var.vpc_flow_log_iam_policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.vpc_flow_log_iam_role_use_name_prefix",
                      "var.vpc_flow_log_iam_role_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.vpc_flow_log_iam_role_use_name_prefix",
                      "var.vpc_flow_log_iam_role_name"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.vpc_flow_log_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_policy.vpc_flow_log_cloudwatch"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                      "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_role.vpc_flow_log_cloudwatch"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_internet_gateway.this",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.create_igw"
                  ]
                }
              },
              {
                "address": "aws_nat_gateway.this",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "allocation_id": {
                    "references": [
                      "local.nat_gateway_ips",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_gateway_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                },
                "depends_on": [
                  "aws_internet_gateway.this"
                ]
              },
              {
                "address": "aws_network_acl.database",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "database",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.tags",
                      "var.database_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.elasticache",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "elasticache",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.intra",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "intra",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.intra"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_intra_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.outpost",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "outpost",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.outpost_subnet_suffix",
                      "var.tags",
                      "var.outpost_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_outpost_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.private",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "private",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.private"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.tags",
                      "var.private_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.public",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "public",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.tags",
                      "var.public_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.public_dedicated_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl.redshift",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "redshift",
                "provider_config_key": "aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_network_acl"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_network_acl",
                    "var.database_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_network_acl",
                    "var.database_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_network_acl",
                    "var.elasticache_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_network_acl",
                    "var.elasticache_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_intra_network_acl",
                    "var.intra_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_intra_network_acl",
                    "var.intra_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_outpost_network_acl",
                    "var.outpost_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_outpost_network_acl",
                    "var.outpost_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_network_acl",
                    "var.private_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_network_acl",
                    "var.private_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.public_dedicated_network_acl",
                    "var.public_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.public_dedicated_network_acl",
                    "var.public_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_inbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_network_acl",
                    "var.redshift_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_outbound",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_network_acl",
                    "var.redshift_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_redshift_subnet_group.redshift",
                "mode": "managed",
                "type": "aws_redshift_subnet_group",
                "name": "redshift",
                "provider_config_key": "aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.redshift_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.redshift_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_subnets",
                    "var.create_redshift_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_route.database_dns64_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_dns64_nat_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "64:ff9b::/96"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_route_table",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route",
                    "var.enable_nat_gateway",
                    "var.enable_ipv6",
                    "var.private_subnet_enable_dns64",
                    "var.single_nat_gateway",
                    "local.len_database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.database_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_internet_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_route_table",
                    "var.create_igw",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_ipv6_egress",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this[0].id",
                      "aws_egress_only_internet_gateway.this[0]",
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_route_table",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.create_database_internet_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_nat_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_route_table",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route",
                    "var.enable_nat_gateway",
                    "var.single_nat_gateway",
                    "local.len_database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.private_dns64_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_dns64_nat_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "64:ff9b::/96"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_nat_gateway",
                    "var.enable_ipv6",
                    "var.private_subnet_enable_dns64",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route.private_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_ipv6_egress",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "local.len_private_subnets",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route.private_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_cidr_block": {
                    "references": [
                      "var.nat_gateway_destination_cidr_block"
                    ]
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.create_igw",
                    "local.num_public_route_tables"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway_ipv6",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway_ipv6",
                "provider_config_key": "aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.create_igw",
                    "var.enable_ipv6",
                    "local.num_public_route_tables"
                  ]
                }
              },
              {
                "address": "aws_route_table.database",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "database",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_route_table",
                    "var.single_nat_gateway",
                    "var.create_database_internet_gateway_route",
                    "local.len_database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.elasticache",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "elasticache",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_route_table"
                  ]
                }
              },
              {
                "address": "aws_route_table.intra",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "intra",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.create_multiple_intra_route_tables",
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_intra_subnets",
                    "local.num_intra_route_tables"
                  ]
                }
              },
              {
                "address": "aws_route_table.private",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_subnets",
                    "local.max_subnet_length",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route_table.public",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.create_multiple_public_route_tables",
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.tags",
                      "var.public_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "local.num_public_route_tables"
                  ]
                }
              },
              {
                "address": "aws_route_table.redshift",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "redshift",
                "provider_config_key": "aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_route_table"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.database",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "aws_route_table.private",
                      "var.create_database_subnet_route_table",
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.database",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_database_subnets",
                    "local.len_database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.elasticache",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.elasticache",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_elasticache_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.elasticache",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_subnets",
                    "local.len_elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.intra",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra",
                      "var.create_multiple_intra_route_tables",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.intra",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_intra_subnets",
                    "local.len_intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.outpost",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "outpost",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.outpost",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_outpost_subnets",
                    "local.len_outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.private",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_subnets",
                    "local.len_private_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "var.create_multiple_public_route_tables",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "local.len_public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_subnets",
                    "var.enable_public_redshift",
                    "local.len_redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift_public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift_public",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.public",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_redshift_subnets",
                    "var.enable_public_redshift",
                    "local.len_redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.database",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_native",
                      "var.database_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.database_subnet_ipv6_native",
                      "var.database_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.database_subnet_ipv6_native",
                      "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.database_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_native"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.database_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_names",
                      "count.index",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_database_subnets",
                    "local.len_database_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.elasticache",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_native",
                      "var.elasticache_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.elasticache_subnet_ipv6_native",
                      "var.elasticache_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.elasticache_subnet_ipv6_native",
                      "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_native"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_names",
                      "count.index",
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.elasticache_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_elasticache_subnets",
                    "local.len_elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.intra",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_native",
                      "var.intra_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.intra_subnet_ipv6_native",
                      "var.intra_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.intra_subnet_ipv6_native",
                      "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.intra_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_native"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.intra_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.intra_subnet_names",
                      "count.index",
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.intra_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_intra_subnets",
                    "local.len_intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.outpost",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "outpost",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_native",
                      "var.outpost_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.outpost_az"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.outpost_subnet_ipv6_native",
                      "var.outpost_subnets",
                      "count.index"
                    ]
                  },
                  "customer_owned_ipv4_pool": {
                    "references": [
                      "var.customer_owned_ipv4_pool"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.outpost_subnet_ipv6_native",
                      "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.outpost_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_native"
                    ]
                  },
                  "map_customer_owned_ip_on_launch": {
                    "references": [
                      "var.map_customer_owned_ip_on_launch"
                    ]
                  },
                  "outpost_arn": {
                    "references": [
                      "var.outpost_arn"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.outpost_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.outpost_subnet_names",
                      "count.index",
                      "var.name",
                      "var.outpost_subnet_suffix",
                      "var.outpost_az",
                      "var.tags",
                      "var.outpost_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_outpost_subnets",
                    "local.len_outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.private",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_native",
                      "var.private_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.private_subnet_ipv6_native",
                      "var.private_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.private_subnet_ipv6_native",
                      "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.private_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_native"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.private_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.private_subnet_names",
                      "count.index",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_subnet_tags",
                      "var.private_subnet_tags_per_az",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_private_subnets",
                    "local.len_private_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.public",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_native",
                      "var.public_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.public_subnet_ipv6_native",
                      "var.public_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.public_subnet_ipv6_native",
                      "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.public_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_native"
                    ]
                  },
                  "map_public_ip_on_launch": {
                    "references": [
                      "var.map_public_ip_on_launch"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.public_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.public_subnet_names",
                      "count.index",
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.public_subnet_tags",
                      "var.public_subnet_tags_per_az",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_public_subnets",
                    "var.one_nat_gateway_per_az",
                    "local.len_public_subnets",
                    "var.azs",
                    "local.len_public_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.redshift",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "redshift",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_native",
                      "var.redshift_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.redshift_subnet_ipv6_native",
                      "var.redshift_subnets",
                      "count.index"
                    ]
                  },
                  "enable_dns64": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_enable_dns64"
                    ]
                  },
                  "enable_resource_name_dns_a_record_on_launch": {
                    "references": [
                      "var.redshift_subnet_ipv6_native",
                      "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                    ]
                  },
                  "enable_resource_name_dns_aaaa_record_on_launch": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.redshift_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "ipv6_native": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_native"
                    ]
                  },
                  "private_dns_hostname_type_on_launch": {
                    "references": [
                      "var.redshift_subnet_private_dns_hostname_type_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_names",
                      "count.index",
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.redshift_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_redshift_subnets",
                    "local.len_redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpc.this",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "assign_generated_ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.use_ipam_pool"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.use_ipam_pool",
                      "var.cidr"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.enable_dns_support"
                    ]
                  },
                  "enable_network_address_usage_metrics": {
                    "references": [
                      "var.enable_network_address_usage_metrics"
                    ]
                  },
                  "instance_tenancy": {
                    "references": [
                      "var.instance_tenancy"
                    ]
                  },
                  "ipv4_ipam_pool_id": {
                    "references": [
                      "var.ipv4_ipam_pool_id"
                    ]
                  },
                  "ipv4_netmask_length": {
                    "references": [
                      "var.ipv4_netmask_length"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.ipv6_cidr"
                    ]
                  },
                  "ipv6_cidr_block_network_border_group": {
                    "references": [
                      "var.ipv6_cidr_block_network_border_group"
                    ]
                  },
                  "ipv6_ipam_pool_id": {
                    "references": [
                      "var.ipv6_ipam_pool_id"
                    ]
                  },
                  "ipv6_netmask_length": {
                    "references": [
                      "var.ipv6_netmask_length"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_vpc"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "domain_name": {
                    "references": [
                      "var.dhcp_options_domain_name"
                    ]
                  },
                  "domain_name_servers": {
                    "references": [
                      "var.dhcp_options_domain_name_servers"
                    ]
                  },
                  "ipv6_address_preferred_lease_time": {
                    "references": [
                      "var.dhcp_options_ipv6_address_preferred_lease_time"
                    ]
                  },
                  "netbios_name_servers": {
                    "references": [
                      "var.dhcp_options_netbios_name_servers"
                    ]
                  },
                  "netbios_node_type": {
                    "references": [
                      "var.dhcp_options_netbios_node_type"
                    ]
                  },
                  "ntp_servers": {
                    "references": [
                      "var.dhcp_options_ntp_servers"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.dhcp_options_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options_association.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options_association",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "dhcp_options_id": {
                    "references": [
                      "aws_vpc_dhcp_options.this[0].id",
                      "aws_vpc_dhcp_options.this[0]",
                      "aws_vpc_dhcp_options.this"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_ipv4_cidr_block_association.this",
                "mode": "managed",
                "type": "aws_vpc_ipv4_cidr_block_association",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.secondary_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.secondary_cidr_blocks",
                    "var.secondary_cidr_blocks"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway.this",
                "mode": "managed",
                "type": "aws_vpn_gateway",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "amazon_side_asn": {
                    "references": [
                      "var.amazon_side_asn"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.vpn_gateway_az"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpn_gateway_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.enable_vpn_gateway"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_attachment.this",
                "mode": "managed",
                "type": "aws_vpn_gateway_attachment",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "var.vpn_gateway_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.intra",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "intra",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.propagate_intra_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "local.len_intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.private",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "private",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.propagate_private_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "local.len_private_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.public",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "public",
                "provider_config_key": "aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_vpc",
                    "var.propagate_public_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_flow_log"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "flow_log_cloudwatch_assume_role",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "vpc-flow-logs.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ],
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsAssumeRole"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:DescribeLogGroups",
                          "logs:DescribeLogStreams"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "references": [
                          "local.flow_log_group_arns"
                        ]
                      },
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_flow_log"
                  ]
                }
              },
              {
                "address": "data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_flow_log"
                  ]
                }
              }
            ],
            "variables": {
              "amazon_side_asn": {
                "default": "64512",
                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
              },
              "azs": {
                "default": [],
                "description": "A list of availability zones names or ids in the region"
              },
              "cidr": {
                "default": "10.0.0.0/16",
                "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`"
              },
              "create_database_internet_gateway_route": {
                "default": false,
                "description": "Controls if an internet gateway route for public database access should be created"
              },
              "create_database_nat_gateway_route": {
                "default": false,
                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
              },
              "create_database_subnet_group": {
                "default": true,
                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
              },
              "create_database_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for database should be created"
              },
              "create_egress_only_igw": {
                "default": true,
                "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
              },
              "create_elasticache_subnet_group": {
                "default": true,
                "description": "Controls if elasticache subnet group should be created"
              },
              "create_elasticache_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for elasticache should be created"
              },
              "create_flow_log_cloudwatch_iam_role": {
                "default": false,
                "description": "Whether to create IAM role for VPC Flow Logs"
              },
              "create_flow_log_cloudwatch_log_group": {
                "default": false,
                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
              },
              "create_igw": {
                "default": true,
                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
              },
              "create_multiple_intra_route_tables": {
                "default": false,
                "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`"
              },
              "create_multiple_public_route_tables": {
                "default": false,
                "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`"
              },
              "create_redshift_subnet_group": {
                "default": true,
                "description": "Controls if redshift subnet group should be created"
              },
              "create_redshift_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for redshift should be created"
              },
              "create_vpc": {
                "default": true,
                "description": "Controls if VPC should be created (it affects almost all resources)"
              },
              "customer_gateway_tags": {
                "default": {},
                "description": "Additional tags for the Customer Gateway"
              },
              "customer_gateways": {
                "default": {},
                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
              },
              "customer_owned_ipv4_pool": {
                "default": null,
                "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
              },
              "database_acl_tags": {
                "default": {},
                "description": "Additional tags for the database subnets network ACL"
              },
              "database_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
              },
              "database_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets inbound network ACL rules"
              },
              "database_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets outbound network ACL rules"
              },
              "database_route_table_tags": {
                "default": {},
                "description": "Additional tags for the database route tables"
              },
              "database_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "database_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "database_subnet_group_name": {
                "default": null,
                "description": "Name of database subnet group"
              },
              "database_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the database subnet group"
              },
              "database_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "database_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "database_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
              },
              "database_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "database_subnet_suffix": {
                "default": "db",
                "description": "Suffix to append to database subnets name"
              },
              "database_subnet_tags": {
                "default": {},
                "description": "Additional tags for the database subnets"
              },
              "database_subnets": {
                "default": [],
                "description": "A list of database subnets inside the VPC"
              },
              "default_network_acl_egress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of egress rules to set on the Default Network ACL"
              },
              "default_network_acl_ingress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of ingress rules to set on the Default Network ACL"
              },
              "default_network_acl_name": {
                "default": null,
                "description": "Name to be used on the Default Network ACL"
              },
              "default_network_acl_tags": {
                "default": {},
                "description": "Additional tags for the Default Network ACL"
              },
              "default_route_table_name": {
                "default": null,
                "description": "Name to be used on the default route table"
              },
              "default_route_table_propagating_vgws": {
                "default": [],
                "description": "List of virtual gateways for propagation"
              },
              "default_route_table_routes": {
                "default": [],
                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
              },
              "default_route_table_tags": {
                "default": {},
                "description": "Additional tags for the default route table"
              },
              "default_security_group_egress": {
                "default": [],
                "description": "List of maps of egress rules to set on the default security group"
              },
              "default_security_group_ingress": {
                "default": [],
                "description": "List of maps of ingress rules to set on the default security group"
              },
              "default_security_group_name": {
                "default": null,
                "description": "Name to be used on the default security group"
              },
              "default_security_group_tags": {
                "default": {},
                "description": "Additional tags for the default security group"
              },
              "default_vpc_enable_dns_hostnames": {
                "default": true,
                "description": "Should be true to enable DNS hostnames in the Default VPC"
              },
              "default_vpc_enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the Default VPC"
              },
              "default_vpc_name": {
                "default": null,
                "description": "Name to be used on the Default VPC"
              },
              "default_vpc_tags": {
                "default": {},
                "description": "Additional tags for the Default VPC"
              },
              "dhcp_options_domain_name": {
                "default": "",
                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_domain_name_servers": {
                "default": [
                  "AmazonProvidedDNS"
                ],
                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_ipv6_address_preferred_lease_time": {
                "default": null,
                "description": "How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_name_servers": {
                "default": [],
                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_node_type": {
                "default": "",
                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_ntp_servers": {
                "default": [],
                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_tags": {
                "default": {},
                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
              },
              "elasticache_acl_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets network ACL"
              },
              "elasticache_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
              },
              "elasticache_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets inbound network ACL rules"
              },
              "elasticache_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets outbound network ACL rules"
              },
              "elasticache_route_table_tags": {
                "default": {},
                "description": "Additional tags for the elasticache route tables"
              },
              "elasticache_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "elasticache_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "elasticache_subnet_group_name": {
                "default": null,
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnet group"
              },
              "elasticache_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "elasticache_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "elasticache_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
              },
              "elasticache_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "elasticache_subnet_suffix": {
                "default": "elasticache",
                "description": "Suffix to append to elasticache subnets name"
              },
              "elasticache_subnet_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets"
              },
              "elasticache_subnets": {
                "default": [],
                "description": "A list of elasticache subnets inside the VPC"
              },
              "enable_dhcp_options": {
                "default": false,
                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
              },
              "enable_dns_hostnames": {
                "default": true,
                "description": "Should be true to enable DNS hostnames in the VPC"
              },
              "enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the VPC"
              },
              "enable_flow_log": {
                "default": false,
                "description": "Whether or not to enable VPC Flow Logs"
              },
              "enable_ipv6": {
                "default": false,
                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
              },
              "enable_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
              },
              "enable_network_address_usage_metrics": {
                "default": null,
                "description": "Determines whether network address usage metrics are enabled for the VPC"
              },
              "enable_public_redshift": {
                "default": false,
                "description": "Controls if redshift should have public routing table"
              },
              "enable_vpn_gateway": {
                "default": false,
                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
              },
              "external_nat_ip_ids": {
                "default": [],
                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
              },
              "external_nat_ips": {
                "default": [],
                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
              },
              "flow_log_cloudwatch_iam_role_arn": {
                "default": "",
                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
              },
              "flow_log_cloudwatch_log_group_class": {
                "default": null,
                "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS"
              },
              "flow_log_cloudwatch_log_group_kms_key_id": {
                "default": null,
                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
              },
              "flow_log_cloudwatch_log_group_name_prefix": {
                "default": "/aws/vpc-flow-log/",
                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
              },
              "flow_log_cloudwatch_log_group_name_suffix": {
                "default": "",
                "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
              },
              "flow_log_cloudwatch_log_group_retention_in_days": {
                "default": null,
                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
              },
              "flow_log_cloudwatch_log_group_skip_destroy": {
                "default": false,
                "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
              },
              "flow_log_deliver_cross_account_role": {
                "default": null,
                "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
              },
              "flow_log_destination_arn": {
                "default": "",
                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
              },
              "flow_log_destination_type": {
                "default": "cloud-watch-logs",
                "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
              },
              "flow_log_file_format": {
                "default": null,
                "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
              },
              "flow_log_hive_compatible_partitions": {
                "default": false,
                "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
              },
              "flow_log_log_format": {
                "default": null,
                "description": "The fields to include in the flow log record, in the order in which they should appear"
              },
              "flow_log_max_aggregation_interval": {
                "default": 600,
                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
              },
              "flow_log_per_hour_partition": {
                "default": false,
                "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
              },
              "flow_log_traffic_type": {
                "default": "ALL",
                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
              },
              "igw_tags": {
                "default": {},
                "description": "Additional tags for the internet gateway"
              },
              "instance_tenancy": {
                "default": "default",
                "description": "A tenancy option for instances launched into the VPC"
              },
              "intra_acl_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets network ACL"
              },
              "intra_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
              },
              "intra_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets inbound network ACLs"
              },
              "intra_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets outbound network ACLs"
              },
              "intra_route_table_tags": {
                "default": {},
                "description": "Additional tags for the intra route tables"
              },
              "intra_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "intra_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "intra_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "intra_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "intra_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
              },
              "intra_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "intra_subnet_suffix": {
                "default": "intra",
                "description": "Suffix to append to intra subnets name"
              },
              "intra_subnet_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets"
              },
              "intra_subnets": {
                "default": [],
                "description": "A list of intra subnets inside the VPC"
              },
              "ipv4_ipam_pool_id": {
                "default": null,
                "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
              },
              "ipv4_netmask_length": {
                "default": null,
                "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
              },
              "ipv6_cidr": {
                "default": null,
                "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
              },
              "ipv6_cidr_block_network_border_group": {
                "default": null,
                "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
              },
              "ipv6_ipam_pool_id": {
                "default": null,
                "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
              },
              "ipv6_netmask_length": {
                "default": null,
                "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
              },
              "manage_default_network_acl": {
                "default": true,
                "description": "Should be true to adopt and manage Default Network ACL"
              },
              "manage_default_route_table": {
                "default": true,
                "description": "Should be true to manage default route table"
              },
              "manage_default_security_group": {
                "default": true,
                "description": "Should be true to adopt and manage default security group"
              },
              "manage_default_vpc": {
                "default": false,
                "description": "Should be true to adopt and manage Default VPC"
              },
              "map_customer_owned_ip_on_launch": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
              },
              "map_public_ip_on_launch": {
                "default": false,
                "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
              },
              "name": {
                "default": "",
                "description": "Name to be used on all the resources as identifier"
              },
              "nat_eip_tags": {
                "default": {},
                "description": "Additional tags for the NAT EIP"
              },
              "nat_gateway_destination_cidr_block": {
                "default": "0.0.0.0/0",
                "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
              },
              "nat_gateway_tags": {
                "default": {},
                "description": "Additional tags for the NAT gateways"
              },
              "one_nat_gateway_per_az": {
                "default": false,
                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
              },
              "outpost_acl_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets network ACL"
              },
              "outpost_arn": {
                "default": null,
                "description": "ARN of Outpost you want to create a subnet in"
              },
              "outpost_az": {
                "default": null,
                "description": "AZ where Outpost is anchored"
              },
              "outpost_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
              },
              "outpost_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets inbound network ACLs"
              },
              "outpost_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets outbound network ACLs"
              },
              "outpost_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "outpost_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "outpost_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "outpost_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "outpost_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
              },
              "outpost_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "outpost_subnet_suffix": {
                "default": "outpost",
                "description": "Suffix to append to outpost subnets name"
              },
              "outpost_subnet_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets"
              },
              "outpost_subnets": {
                "default": [],
                "description": "A list of outpost subnets inside the VPC"
              },
              "private_acl_tags": {
                "default": {},
                "description": "Additional tags for the private subnets network ACL"
              },
              "private_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
              },
              "private_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets inbound network ACLs"
              },
              "private_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets outbound network ACLs"
              },
              "private_route_table_tags": {
                "default": {},
                "description": "Additional tags for the private route tables"
              },
              "private_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "private_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "private_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "private_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "private_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
              },
              "private_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "private_subnet_suffix": {
                "default": "private",
                "description": "Suffix to append to private subnets name"
              },
              "private_subnet_tags": {
                "default": {},
                "description": "Additional tags for the private subnets"
              },
              "private_subnet_tags_per_az": {
                "default": {},
                "description": "Additional tags for the private subnets where the primary key is the AZ"
              },
              "private_subnets": {
                "default": [],
                "description": "A list of private subnets inside the VPC"
              },
              "propagate_intra_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_private_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_public_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "public_acl_tags": {
                "default": {},
                "description": "Additional tags for the public subnets network ACL"
              },
              "public_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
              },
              "public_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets inbound network ACLs"
              },
              "public_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets outbound network ACLs"
              },
              "public_route_table_tags": {
                "default": {},
                "description": "Additional tags for the public route tables"
              },
              "public_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "public_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "public_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "public_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "public_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
              },
              "public_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "public_subnet_suffix": {
                "default": "public",
                "description": "Suffix to append to public subnets name"
              },
              "public_subnet_tags": {
                "default": {},
                "description": "Additional tags for the public subnets"
              },
              "public_subnet_tags_per_az": {
                "default": {},
                "description": "Additional tags for the public subnets where the primary key is the AZ"
              },
              "public_subnets": {
                "default": [],
                "description": "A list of public subnets inside the VPC"
              },
              "putin_khuylo": {
                "default": true,
                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
              },
              "redshift_acl_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets network ACL"
              },
              "redshift_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
              },
              "redshift_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets inbound network ACL rules"
              },
              "redshift_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets outbound network ACL rules"
              },
              "redshift_route_table_tags": {
                "default": {},
                "description": "Additional tags for the redshift route tables"
              },
              "redshift_subnet_assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
              },
              "redshift_subnet_enable_dns64": {
                "default": true,
                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
              },
              "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                "default": false,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
              },
              "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                "default": true,
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
              },
              "redshift_subnet_group_name": {
                "default": null,
                "description": "Name of redshift subnet group"
              },
              "redshift_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnet group"
              },
              "redshift_subnet_ipv6_native": {
                "default": false,
                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
              },
              "redshift_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "redshift_subnet_names": {
                "default": [],
                "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
              },
              "redshift_subnet_private_dns_hostname_type_on_launch": {
                "default": null,
                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
              },
              "redshift_subnet_suffix": {
                "default": "redshift",
                "description": "Suffix to append to redshift subnets name"
              },
              "redshift_subnet_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets"
              },
              "redshift_subnets": {
                "default": [],
                "description": "A list of redshift subnets inside the VPC"
              },
              "reuse_nat_ips": {
                "default": false,
                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
              },
              "secondary_cidr_blocks": {
                "default": [],
                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
              },
              "single_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              },
              "use_ipam_pool": {
                "default": false,
                "description": "Determines whether IPAM pool is used for CIDR allocation"
              },
              "vpc_flow_log_iam_policy_name": {
                "default": "vpc-flow-log-to-cloudwatch",
                "description": "Name of the IAM policy"
              },
              "vpc_flow_log_iam_policy_use_name_prefix": {
                "default": true,
                "description": "Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix"
              },
              "vpc_flow_log_iam_role_name": {
                "default": "vpc-flow-log-role",
                "description": "Name to use on the VPC Flow Log IAM role created"
              },
              "vpc_flow_log_iam_role_use_name_prefix": {
                "default": true,
                "description": "Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix"
              },
              "vpc_flow_log_permissions_boundary": {
                "default": null,
                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
              },
              "vpc_flow_log_tags": {
                "default": {},
                "description": "Additional tags for the VPC Flow Logs"
              },
              "vpc_tags": {
                "default": {},
                "description": "Additional tags for the VPC"
              },
              "vpn_gateway_az": {
                "default": null,
                "description": "The Availability Zone for the VPN Gateway"
              },
              "vpn_gateway_id": {
                "default": "",
                "description": "ID of VPN Gateway to attach to the VPC"
              },
              "vpn_gateway_tags": {
                "default": {},
                "description": "Additional tags for the VPN gateway"
              }
            }
          },
          "version_constraint": "v5.13.0"
        }
      },
      "variables": {
        "aws_ami": {
          "default": "",
          "description": "The AMI to use for the EC2 instances if empty, the latest Debian 12 AMI will be used"
        },
        "aws_instance_type": {
          "default": "m6i.xlarge",
          "description": "The instance type to use for the EC2 instances"
        },
        "aws_instance_type_bastion": {
          "default": "t2.nano",
          "description": "The instance type to use for the bastion host"
        },
        "camunda_disk_size": {
          "default": 50,
          "description": "The size of the Camunda disk in GiB"
        },
        "cidr_blocks": {
          "default": "10.200.0.0/16",
          "description": "The CIDR block to use for the VPC"
        },
        "enable_alb": {
          "default": true,
          "description": "Enable the Application Load Balancer. If false, the ALB will not be created, e.g. if a user doesn't want to publicy expose the setup."
        },
        "enable_jump_host": {
          "default": true,
          "description": "Enable the jump host (bastion) to access the private instances"
        },
        "enable_nlb": {
          "default": true,
          "description": "Enable the Network Load Balancer. If false, the NLB will not be created."
        },
        "enable_opensearch": {
          "default": true,
          "description": "Enable the OpenSearch cluster. If false, the OpenSearch cluster will not be created. Users may want to supply DBs manually themselves."
        },
        "enable_opensearch_logging": {
          "default": false,
          "description": "Enable OpenSearch logging to CloudWatch Logs"
        },
        "enable_vpc_logging": {
          "default": false,
          "description": "Enable VPC flow logging to CloudWatch Logs"
        },
        "generate_ssh_key_pair": {
          "default": false,
          "description": "Generate an SSH key pair for the EC2 instances over the use of pub_key_path. Meant for testing purposes / temp environments."
        },
        "instance_count": {
          "default": 3,
          "description": "The number of instances to create"
        },
        "opensearch_disk_size": {
          "default": 50,
          "description": "The size of the OpenSearch disk in GiB"
        },
        "opensearch_disk_throughput": {
          "default": 125,
          "description": "The throughput of the OpenSearch disk in MiB/s"
        },
        "opensearch_instance_count": {
          "default": 1,
          "description": "The number of instances to create"
        },
        "opensearch_log_types": {
          "default": [
            "SEARCH_SLOW_LOGS",
            "INDEX_SLOW_LOGS",
            "ES_APPLICATION_LOGS"
          ],
          "description": "The types of logs to publish to CloudWatch Logs"
        },
        "opensearch_master_password": {
          "default": "camundarocks123",
          "description": "The password of the OpenSearch master user",
          "sensitive": true
        },
        "opensearch_master_username": {
          "default": "camunda",
          "description": "The username of the OpenSearch master user",
          "sensitive": true
        },
        "prefix": {
          "default": "camunda",
          "description": "The prefix to use for names of resources"
        },
        "pub_key_path": {
          "default": "~/.ssh/id_rsa.pub",
          "description": "The path to the public key to use for the EC2 instances for SSH access"
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "main_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
      "attribute": [
        "vpc_id"
      ]
    },
    {
      "resource": "module.vpc.aws_route_table.private",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_subnet.private",
      "attribute": []
    },
    {
      "resource": "aws_security_group.allow_remote_9090",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_security_group_id"
      ]
    },
    {
      "resource": "module.vpc.aws_route_table_association.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table_association.database",
      "attribute": []
    },
    {
      "resource": "aws_security_group.allow_necessary_camunda_ports_within_vpc",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "aws_lb.main[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "data.aws_caller_identity.current",
      "attribute": [
        "account_id"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_support"
      ]
    },
    {
      "resource": "aws_security_group.allow_remote_grpc",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "aws_security_group.allow_ssh",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "data.aws_region.current",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.aws_subnet.elasticache",
      "attribute": []
    },
    {
      "resource": "aws_instance.bastion",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "aws_lb.grpc[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_subnet.intra",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table_association.private",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "aws_key_pair.main",
      "attribute": [
        "key_name"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_association_id"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_hostnames"
      ]
    },
    {
      "resource": "aws_opensearch_domain.opensearch_cluster",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.aws_route_table.public",
      "attribute": []
    },
    {
      "resource": "aws_ebs_volume.camunda",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table_association.elasticache",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table_association.public",
      "attribute": []
    },
    {
      "resource": "aws_iam_policy.cloudwatch_policy",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "instance_tenancy"
      ]
    },
    {
      "resource": "module.vpc.aws_route_table_association.intra",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_route.database_nat_gateway",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_egress_only_internet_gateway.this",
      "attribute": []
    },
    {
      "resource": "aws_iam_role.cloudwatch",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_cidr_block"
      ]
    },
    {
      "resource": "aws_lb_target_group.main",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_route_table.elasticache",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table_association.redshift_public",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table.database",
      "attribute": []
    },
    {
      "resource": "aws_lb.grpc",
      "attribute": []
    },
    {
      "resource": "tls_private_key.testing[0]",
      "attribute": [
        "public_key_openssh"
      ]
    },
    {
      "resource": "tls_private_key.testing",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "cidr_block"
      ]
    },
    {
      "resource": "module.vpc.aws_subnet.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route.public_internet_gateway[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "aws_instance.camunda",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_subnet.database",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route_table.intra",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_subnet.public",
      "attribute": []
    },
    {
      "resource": "aws_lb.main",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_customer_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_route.private_nat_gateway",
      "attribute": []
    },
    {
      "resource": "data.aws_ami.debian",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.aws_subnet.outpost",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_eip.nat",
      "attribute": []
    },
    {
      "resource": "aws_lb_target_group.grpc",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "aws_lb_target_group.connectors",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "aws_cloudwatch_log_group.os_log_group",
      "attribute": []
    },
    {
      "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_network_acl_id"
      ]
    },
    {
      "resource": "aws_kms_key.main",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "aws_security_group.allow_remote_80_443",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.aws_nat_gateway.this",
      "attribute": []
    },
    {
      "resource": "data.aws_availability_zones.available",
      "attribute": [
        "names"
      ]
    },
    {
      "resource": "aws_iam_instance_profile.cloudwatch_instance_profile",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.aws_vpc.this[0]",
      "attribute": [
        "owner_id"
      ]
    },
    {
      "resource": "module.vpc.aws_route.private_ipv6_egress",
      "attribute": []
    }
  ],
  "timestamp": "2024-10-17T08:04:53Z",
  "applyable": true,
  "complete": true,
  "errored": false
}
